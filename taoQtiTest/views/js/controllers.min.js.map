{"version":3,"file":"routes.js","sources":["routes.js","creator/templates/testpart!tpl","creator/templates/section!tpl","creator/templates/rubricblock!tpl","creator/templates/itemref!tpl","creator/templates/item!tpl","tpl!taoQtiTest/controller/creator/templates/test-props","tpl!taoQtiTest/controller/creator/templates/testpart-props","tpl!taoQtiTest/controller/creator/templates/section-props","tpl!taoQtiTest/controller/creator/templates/itemref-props","tpl!taoQtiTest/controller/creator/templates/rubricblock-props","creator/templates/index.js","creator/views/item.js","creator/views/property.js","creator/views/actions.js","creator/views/itemref.js","creator/helpers/ckConfigurator.js","creator/views/rubricblock.js","creator/helpers/qtiTest.js","creator/views/section.js","creator/views/testpart.js","creator/views/test.js","creator/encoders/dom2qti.js","creator/creator.js","../testRunner/tpl/button!tpl","../testRunner/actionBarHook.js","../testRunner/tpl/navigator!tpl","../testRunner/tpl/navigatorTree!tpl","../testRunner/testReview.js","../testRunner/progressUpdater.js","../../serviceApi/ServiceApi.js","../../serviceApi/UserInfoService.js","../../serviceApi/StateStorage.js","runtime/testRunner.js"],"names":["define","Creator","css","actions","index","hb","template","Handlebars","depth0","helpers","partials","data","this","compilerInfo","merge","stack1","helper","buffer","functionType","escapeExpression","identifier","call","hash","options","helperMissing","title","__","href","label","program1","uri","parent","inverse","self","noop","fn","program","program2","each","testPart","section","rubricBlock","itemRef","item","testProps","testPartProps","sectionProps","itemRefProps","rubricBlockProps","testpart","itemref","rubricblock","properties","test","$","templates","itemTemplate","itemView","loadItems","setUpLiveSearch","timeout","liveSearch","pattern","$search","val","length","clearTimeout","setTimeout","items","update","keyup","siblings","click","disableSelection","$itemBox","empty","append","enableSelection","$panel","selectable","filter","selected","event","ui","addClass","unselected","removeClass","stop","trigger","undefined","DataBinder","propView","tmplName","model","propValidation","$view","on","e","isValid","namespace","$togglers","groupValidator","$container","open","databinder","children","hide","appendTo","startDomComponent","bind","getView","isOpen","onOpen","cb","stopPropagation","onClose","destroy","remove","toggle","not","show","propertyView","find","preventDefault","$elt","hasClass","disabledClass","blur","activeClass","btnOnClass","move","$actionContainer","containerClass","elementClass","$element","parents","$elements","is","console","log","fadeOut","insertBefore","fadeIn","insertAfter","movable","actionContainerElt","$moveUp","$moveDown","removable","$delete","disable","enable","_","setUp","$itemRef","propHandler","removePropHandler","categoriesProperty","$select","select2","width","tags","multiple","tokenSeparators","formatNoMatches","maximumInputLength","resize","listenActionState","document","$parent","$target","target","throttle","$refs","first","$actions","innerWidth","outerWidth","ckConfigurator","getConfig","editor","toolbarType","underline","ckeditor","ckConfig","filterPlugin","plugin","contains","plugins","reject","split","join","extraPlugins","$rubricBlock","rbViews","$propContainer","setUpEditor","$rubricBlockBinding","$rubricBlockContent","syncRubricBlockContent","html","inline","qtiTestHelper","extractIdentifiers","obj","identifiers","has","concat","toLowerCase","flatten","forEach","value","getIdentifier","qtiType","lockedIdentifiers","suggestion","glue","push","idFormatValidator","qtiIdPattern","name","message","validate","callback","idAvailableValidator","values","original","filterQtiType","type","addMissingQtiType","collection","parentType","key","isObject","isArray","isNumber","replace","consolidateModel","testParts","assessmentSections","assessmentSection","ordering","shuffle","rubricBlocks","content","views","itemRefView","rubricBlockView","$section","$selectionSwitcher","$selectionSelect","$selectionWithRep","switchSelection","prop","incrementer","selection","$title","text","itemRefs","sectionParts","labels","encode","acceptItemRefs","$selected","$items","Array","prototype","slice","arguments","$placeholder","$placeholders","off","defaultItemData","itemSessionControl","isUndefined","maxAttempts","clone","$item","addItemRef","defaults","decode","trim","end","qti-type","attr","$refList","itemData","eq","addRubricBlock","adder","templateData","$sections","sectionView","$testPart","$identifier","sections","addSection","sectionIndex","$testParts","testPartView","testView","addTestPart","testPartIndex","navigationMode","submissionMode","added","getAttributes","object","omit","attrToStr","attributes","reduce","acc","isString","isEmpty","Dom2QtiEncoder","modelValue","result","startTag","nodeValue","$nodeValue","elt","nodeType","xmlBase","nodeName","id","class","lang","transform","childNodes","module","history","feedback","DataBindController","itemrefView","validators","url","search","getJSON","notempty","Controller","routes","start","$saver","config","back","partial","binderOptions","filters","isItemRef","isSection","encoders","dom2qti","beforeSave","binder","takeControl","get","register","window","save","success","order","icon","errorHandler","buttonTpl","isValidConfig","toolconfig","hook","initQtiTool","$toolsContainer","assessmentTestContext","testRunner","require","parseInt","isNaN","tplData","navigation","$button","isValidHook","$existingBtn","clear","isVisible","init","_appendInOrder","_ns","$after","$before","$btn","_order","after","before","isFunction","region","active","program4","program29","program6","program7","answered","apply","program8","program9","flagged","program11","program13","viewed","program17","program15","position","program21","program19","program24","program22","program27","program25","itemId","parts","navigatorTpl","navigatorTreeTpl","capitalize","_cssCls","collapsed","collapsible","masked","disabled","unseen","scope","testSection","_selectors","component","filterBar","tree","collapseHandle","linearState","infoAnswered","infoViewed","infoUnanswered","infoFlagged","infoPanel","infoPanelLabels","partLabels","sectionLabels","itemLabels","itemIcons","icons","linearStart","counters","actives","collapsiblePanels","notFlagged","notAnswered","_filterMap","all","unanswered","filtered","_optionsMap","reviewScope","reviewPreventsUnseen","canCollapse","_reviewScopes","testReview","element","initOptions","putOnRight","insertMethod","hidden","$component","Error","_loadDOM","_initEvents","_updateDisplayOptions","$infoAnswered","$infoViewed","$infoUnanswered","$infoFlagged","$filterBar","$filters","$tree","$linearState","toggleClass","_openSelected","closest","_togglePanel","_openOnly","_mark","_select","_jump","mode","_filter","criteria","_updateSectionCounters","jquery","hierarchy","parentsUntil","add","opened","root","panel","collapseSelector","_setItemIcon","_adjustItemIcon","defaultIcon","iconCls","cls","itemPosition","flag","$filtered","total","nb","scopeClass","$root","_updateOptions","testContext","optionKey","contextKey","_updateInfos","progression","getProgression","Number","_getProgressionOfTest","numberItems","numberCompleted","numberPresented","numberFlagged","_getProgressionOfTestPart","numberItemsPart","numberCompletedPart","numberPresentedPart","numberFlaggedPart","_getProgressionOfTestSection","numberItemsSection","numberCompletedSection","numberPresentedSection","numberFlaggedSection","_updateTree","navigatorMap","reviewScopePart","reviewScopeSection","_partsFilter","part","preventsUnseen","progressInfoMethod","dom","eventName","extraParameters","testReviewFactory","progressUpdaters","progressBar","progressLabel","progressbar","write","ratio","progressIndicator","progressIndicatorMethod","percentageProgression","Math","max","floor","positionProgression","progressScope","progressIndicatorScope","progressScopeCounter","counter","progressUpdaterFactory","updater","UrlParser","ServiceApi","baseUrl","parameters","serviceCallId","stateStorage","userService","connected","state","onFinishCallback","onKillCallback","onDisplayChangeCallback","SIG_SUCCESS","SIG_ERROR","loadInto","frame","$frame","callUrl","getCallUrl","isCORSAllowed","checkCORS","connect","contentWindow","__knownParent__","onServiceApiReady","params","param","getUserPropertyValues","property","getServiceCallId","getState","setState","set","getParameter","onFinish","onKill","kill","finish","valueArray","UserInfoService","requestUrl","hasOwnProperty","ajax","dataType","service","r","StateStorage","submitUrl","actionBarHook","progressUpdater","iframeResizer","iframeNotifier","MathJax","deleter","moment","modal","timerIds","currentTimes","lastDates","timeDiffs","waitingTime","$timers","$controls","timerIndex","$doc","TestRunner","TEST_STATE_INITIAL","TEST_STATE_INTERACTING","TEST_STATE_MODAL_FEEDBACK","TEST_STATE_SUSPENDED","TEST_STATE_CLOSED","TEST_NAVIGATION_LINEAR","TEST_NAVIGATION_NONLINEAR","TEST_ITEM_STATE_INTERACTING","SECTION_EXIT_CODE","COMPLETED_NORMALLY","QUIT","COMPLETE_TIMEOUT","TIMEOUT","FORCE_QUIT","IN_PROGRESS","ERROR","TEST_EXIT_CODE","COMPLETE","TERMINATED","INCOMPLETE","INCOMPLETE_QUIT","INACTIVE","CANDIDATE_DISAGREED_WITH_NDA","beforeTransition","disableGui","$itemFrame","$rubricBlocks","$timerWrapper","afterTransition","enableGui","jump","itemServiceApi","actionCall","markForReview","markForReviewUrl","cache","async","setTestContext","updateTestReview","moveForward","moveBackward","skip","isTimeout","updateTimer","confirmBox","confirmBtn","metaData","SECTION","comment","$commentArea","$commentText","focus","closeComment","emptyComment","storeComment","when","post","commentUrl","done","eval","itemServiceApiCall","$runner","updateContext","updateProgress","updateNavigation","updateInformation","updateRubrics","updateTools","updateExitButton","$contentBox","autoHeight","itemSessionState","adjustFrame","visibility","error","itemIdentifier","allowSkipping","isLast","$skip","$skipEnd","qtiTools","forIn","createTimer","cst","$timer","qtiClassName","$label","$time","formatTime","seconds","hasTimers","i","timeConstraints","$topActionBar","allowLateSubmission","Date","warningTime","NEGATIVE_INFINITY","timerWarning","setInterval","getTime","round","clearInterval","isFinite","timeWarning","duration","humanize","warning","rubrics","prependTo","Hub","Queue","$exit","$moveForward","$moveEnd","$moveBackward","canMoveBackward","considerProgress","$progressBox","testTitle","$position","sectionTitle","$titleGroup","$logout","logoutButton","exitButton","finalHeight","innerHeight","outerHeight","$bottomActionBar","height","$sideBars","$sideBar","$naviButtons","totalSeconds","sec_num","hours","minutes","time","action","extraParams","assign","serviceApi","exit","$confirmBox","testProgression","toString","TEST","$skipButtons","$forwardButtons","$commentToggle","$commentCancel","$commentSend","$progressBar","$progressLabel","$contentPanel","allowComment","ajaxError","jqxhr","status","reviewScreen","reviewRegion","reviewCanCollapse","animate","opacity"],"mappings":"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","sourcesContent":["/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n * \n * \n */\n\n//@see http://forge.taotesting.com/projects/tao/wiki/Front_js\ndefine('taoQtiTest/controller/routes',[],function(){\n    'use strict';\n\n    return {\n        'Creator': {\n            'css': 'creator', \n            'actions': {\n                'index' : 'controller/creator/creator'\n            }\n        }\n    };\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/testpart', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div id=\\\"\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"testpart clearfix\\\">\\n\\n   <h1><span data-bind=\\\"identifier\\\">\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n        <div class=\\\"actions\\\"> \\n            <div class=\\\"tlb\\\">\\n                <div class=\\\"tlb-top\\\">\\n                    <span class=\\\"tlb-box\\\">\\n                        <span class=\\\"tlb-bar\\\">\\n                            <span class=\\\"tlb-start\\\"></span>\\n                            <span class=\\\"tlb-group\\\">\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off property-toggler\\\" title=\\\"Test Part Properties\\\"><span class=\\\"icon-settings\\\"></span></a>\\n                                <span class=\\\"tlb-separator\\\"></span>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off move-up\\\" title=\\\"Move Up\\\"><span class=\\\"icon-up\\\"></span></a>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off move-down\\\" title=\\\"Move Down\\\"><span class=\\\"icon-down\\\"></span></a>\\n                                <span class=\\\"tlb-separator\\\"></span> \\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off\\\" title=\\\"Remove Test Part\\\" data-delete=\\\"#\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"><span class=\\\"icon-bin\\\"></span></a>\\n                            </span>\\n                            <span class=\\\"tlb-end\\\"></span>\\n                        </span>  \\n                        <!--<span class=\\\"tlb-bar\\\">-->\\n                            <!--<span class=\\\"tlb-start\\\"></span>-->\\n                            <!--<span class=\\\"tlb-text-button-box\\\">-->\\n                                <!--<a class=\\\"tlb-text-button-off section-adder\\\">-->\\n                                    <!--<span class=\\\"icon-add\\\"></span>-->\\n                                    <!--<span class=\\\"tlb-text\\\">New Section</span>-->\\n                                <!--</a>-->\\n                            <!--</span>-->\\n                            <!--<span class=\\\"tlb-end\\\"></span>-->\\n                        <!--</span>-->\\n                    </span>   \\n                </div>\\n            </div>\\n        </div>\\n        <a href=\\\"#\\\" class=\\\"toggler opened\\\" data-toggle=\\\"#testpart-content-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></a>\\n    </h1>\\n    <div id=\\\"testpart-content-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"testpart-content\\\">\\n        \\n       <!-- assessmentTest/testPart/assessmentSections -->\\n       <div class=\\\"sections\\\" data-bind-each=\\\"assessmentSections\\\" data-bind-tmpl=\\\"section\\\" data-bind-filter=\\\"isSection\\\"></div>\\n\\n        <button class=\\\"btn-info small section-adder\\\">\\n            <span class=\\\"icon-add\\\"></span>New section\\n        </button>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/section', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div id=\\\"\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"section\\\">\\n\\n<!-- assessmentTest/testPart/assessmentSection/title -->\\n    <h2><span data-bind=\\\"title\\\">\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n        <div class=\\\"actions\\\">\\n            <div class=\\\"tlb\\\">\\n                <div class=\\\"tlb-top\\\">\\n                    <span class=\\\"tlb-box\\\">\\n                        <span class=\\\"tlb-bar\\\">\\n                            <span class=\\\"tlb-start\\\"></span>\\n                            <span class=\\\"tlb-group\\\">\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off rub-toggler\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Manage Rubric Blocks\", options) : helperMissing.call(depth0, \"__\", \"Manage Rubric Blocks\", options)))\n    + \"\\\" data-toggle=\\\"#rublocks-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" ><span class=\\\"icon-rubric\\\"></span></a>\\n                                <span class=\\\"tlb-separator\\\"></span>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off property-toggler\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Section Properties\", options) : helperMissing.call(depth0, \"__\", \"Section Properties\", options)))\n    + \"\\\"><span class=\\\"icon-settings\\\"></span></a>\\n                                <span class=\\\"tlb-separator\\\"></span>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off move-up disabled\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move Up\", options) : helperMissing.call(depth0, \"__\", \"Move Up\", options)))\n    + \"\\\"><span class=\\\"icon-up\\\"></span></a>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off move-down disabled\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move Down\", options) : helperMissing.call(depth0, \"__\", \"Move Down\", options)))\n    + \"\\\"><span class=\\\"icon-down\\\"></span></a>\\n                                <span class=\\\"tlb-separator\\\"></span>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off disabled\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Section\", options) : helperMissing.call(depth0, \"__\", \"Remove Section\", options)))\n    + \"\\\" data-delete=\\\":parent .section\\\"><span class=\\\"icon-bin\\\"></span></a>\\n                            </span>\\n                            <span class=\\\"tlb-end\\\"></span>\\n                        </span>\\n                    </span>\\n                </div>\\n            </div>\\n        </div>\\n    </h2>\\n\\n    <div id=\\\"rublocks-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"rublocks clearfix toggled\\\">\\n        <h3>\\n            <span class=\\\"title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Rubric Blocks\", options) : helperMissing.call(depth0, \"__\", \"Rubric Blocks\", options)))\n    + \"</span>\\n        </h3>\\n        <ol class=\\\"rubricblocks decimal\\\" data-bind-each=\\\"rubricBlocks\\\" data-bind-tmpl=\\\"rubricblock\\\"></ol>\\n        <button class=\\\"btn-info small rublock-adder\\\">\\n            <span class=\\\"icon-add\\\"></span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"New Rubric Block\", options) : helperMissing.call(depth0, \"__\", \"New Rubric Block\", options)))\n    + \"\\n        </button>\\n    </div>\\n    <div class=\\\"itemrefs-wrapper\\\">\\n        <h3>\\n            <span class=\\\"title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Items\", options) : helperMissing.call(depth0, \"__\", \"Items\", options)))\n    + \"</span>\\n        </h3>\\n        <ol class=\\\"itemrefs decimal clearfix\\\" data-bind-each=\\\"sectionParts\\\" data-bind-tmpl=\\\"itemref\\\" data-bind-filter=\\\"isItemRef\\\" data-msg=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Add selected item(s) here.\", options) : helperMissing.call(depth0, \"__\", \"Add selected item(s) here.\", options)))\n    + \"\\\"></ol>\\n        <div class=\\\"itemref-placeholder\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Add selected item(s) here.\", options) : helperMissing.call(depth0, \"__\", \"Add selected item(s) here.\", options)))\n    + \"\\n        </div>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/rubricblock', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<li class=\\\"rubricblock\\\">\\n    <div class=\\\"actions\\\">\\n       <div class=\\\"tlb\\\">\\n            <div class=\\\"tlb-top\\\">\\n                <span class=\\\"tlb-box\\\">\\n                    <span class=\\\"tlb-bar\\\">\\n                        <span class=\\\"tlb-start\\\"></span>\\n                        <span class=\\\"tlb-group\\\">\\n                            <!--<a href=\\\"#\\\" class=\\\"tlb-button-off property-toggler\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Rubric Block Properties\", options) : helperMissing.call(depth0, \"__\", \"Rubric Block Properties\", options)))\n    + \"\\\"><span class=\\\"icon-settings\\\"></span></a>-->\\n                            <!--<span class=\\\"tlb-separator\\\"></span> -->\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Rubric Block\", options) : helperMissing.call(depth0, \"__\", \"Remove Rubric Block\", options)))\n    + \"\\\" data-delete=\\\":parent .rubricblock\\\"><span class=\\\"icon-bin\\\"></span></a>\\n                        </span>\\n                        <span class=\\\"tlb-end\\\"></span>\\n                    </span>\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"rubricblock-content\\\" contenteditable></div>\\n    <div class=\\\"rubricblock-binding\\\" data-bind=\\\"content\\\" data-bind-html=\\\"true\\\" data-bind-encoder=\\\"dom2qti\\\"></div>\\n</li>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/itemref', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<li id='\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"' data-uri='\";\n  if (helper = helpers.href) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.href); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"' class='itemref'>\\n    <span class='title truncate'>\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n    <div class=\\\"actions\\\"> \\n        <div class=\\\"tlb\\\">\\n            <div class=\\\"tlb-top\\\">\\n                <span class=\\\"tlb-box\\\">\\n                    <span class=\\\"tlb-bar\\\">\\n                        <span class=\\\"tlb-start\\\"></span>\\n                        <span class=\\\"tlb-group\\\">\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off property-toggler\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Item Reference Properties\", options) : helperMissing.call(depth0, \"__\", \"Item Reference Properties\", options)))\n    + \"\\\"><span class=\\\"icon-settings\\\"></span></a>\\n                            <span class=\\\"tlb-separator\\\"></span>\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off move-up\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move Up\", options) : helperMissing.call(depth0, \"__\", \"Move Up\", options)))\n    + \"\\\"><span class=\\\"icon-up\\\"></span></a>\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off move-down\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move Down\", options) : helperMissing.call(depth0, \"__\", \"Move Down\", options)))\n    + \"\\\"><span class=\\\"icon-down\\\"></span></a>\\n                            <span class=\\\"tlb-separator\\\"></span> \\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Item Reference\", options) : helperMissing.call(depth0, \"__\", \"Remove Item Reference\", options)))\n    + \"\\\" data-delete=\\\":parent .itemref\\\"><span class=\\\"icon-bin\\\"></span></a>\\n                        </span>\\n                        <span class=\\\"tlb-end\\\"></span>\\n                    </span>  \\n                </span>   \\n            </div>\\n        </div>\\n    </div>\\n</li>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/item', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n     <li data-uri='\";\n  if (helper = helpers.uri) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.uri); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"' class='truncate'>\\n        \";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \" \\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.parent), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n     </li>\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<span class='flag truncate' title=\\\"\";\n  if (helper = helpers.parent) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.parent); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (helper = helpers.parent) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.parent); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\";\n  return buffer;\n  }\n\n  stack1 = helpers.each.call(depth0, depth0, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/test-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\";\n\n\n  buffer += \"<div class=\\\"test-props props clearfix\\\">\\n    \\n    <!-- test properties --> \\n    <h3 data-bind=\\\"title\\\"></h3>\\n\\n<!-- assessmentTest/identifier -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"test-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"test-identifier\\\" data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $testIdFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The principle identifier of the test.\", options) : helperMissing.call(depth0, \"__\", \"The principle identifier of the test.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/title -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"test-title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Title\", options) : helperMissing.call(depth0, \"__\", \"Title\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"test-title\\\" data-bind=\\\"title\\\" data-validate=\\\"$notEmpty\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The test title.\", options) : helperMissing.call(depth0, \"__\", \"The test title.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .test-time-limits\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time Limits\", options) : helperMissing.call(depth0, \"__\", \"Time Limits\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/timeLimits -->\\n    <div class=\\\"test-time-limits toggled\\\">\\n\\n\\n\\n<!-- assessmentTest/timeLimits/maxTime -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"test-max-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum Duration\", options) : helperMissing.call(depth0, \"__\", \"Maximum Duration\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"max-time\\\" value=\\\"00:00:00\\\" data-duration=\\\"HH:mm:ss\\\" data-bind=\\\"timeLimits.maxTime\\\" data-bind-encoder=\\\"time\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum duration for the all test.\", options) : helperMissing.call(depth0, \"__\", \"Maximum duration for the all test.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/timeLimits/allowLateSubmission -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Late submission allowed\", options) : helperMissing.call(depth0, \"__\", \"Late submission allowed\", options)))\n    + \"\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"test-allow-late-submission\\\" value=\\\"true\\\" data-bind=\\\"timeLimits.allowLateSubmission\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Whether a candidate's response that is beyond the maximum duration should still be accepted.\", options) : helperMissing.call(depth0, \"__\", \"Whether a candidate's response that is beyond the maximum duration should still be accepted.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/testpart-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div id=\\\"testpart-props-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"testpart-props props clearfix\\\">\\n    <h3>\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h3>\\n    \\n    <form autocomplete=\\\"off\\\">\\n\\n<!-- assessmentTest/testPart/identifier -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"testpart-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"testpart-identifier\\\" data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $testIdFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The test part identifier.\", options) : helperMissing.call(depth0, \"__\", \"The test part identifier.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/navigationMode -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n               \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Navigation\", options) : helperMissing.call(depth0, \"__\", \"Navigation\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"radio\\\" name=\\\"testpart-navigation-mode\\\" value=\\\"0\\\" checked=\\\"checked\\\" data-bind=\\\"navigationMode\\\" data-bind-encoder=\\\"number\\\" />\\n                    <span class=\\\"icon-radio\\\"></span>\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Linear\", options) : helperMissing.call(depth0, \"__\", \"Linear\", options)))\n    + \"\\n                </label>\\n                <label>\\n                    <input type=\\\"radio\\\" name=\\\"testpart-navigation-mode\\\" value=\\\"1\\\"  />\\n                    <span class=\\\"icon-radio\\\"></span>\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Non Linear\", options) : helperMissing.call(depth0, \"__\", \"Non Linear\", options)))\n    + \"\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The navigation mode determines the general paths that the candidate may take. A linear mode restricts the candidate to attempt each item in turn. Non Linear removes this restriction.\", options) : helperMissing.call(depth0, \"__\", \"The navigation mode determines the general paths that the candidate may take. A linear mode restricts the candidate to attempt each item in turn. Non Linear removes this restriction.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/submissionMode -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Submission\", options) : helperMissing.call(depth0, \"__\", \"Submission\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"radio\\\" name=\\\"testpart-submission-mode\\\" value=\\\"0\\\" checked=\\\"checked\\\" data-bind=\\\"submissionMode\\\" data-bind-encoder=\\\"number\\\" />\\n                    <span class=\\\"icon-radio\\\"></span>\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Individual\", options) : helperMissing.call(depth0, \"__\", \"Individual\", options)))\n    + \"\\n                </label>\\n                <label>\\n                    <input type=\\\"radio\\\" name=\\\"testpart-submission-mode\\\" value=\\\"1\\\"  />\\n                    <span class=\\\"icon-radio\\\"></span>\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Simultaneous\", options) : helperMissing.call(depth0, \"__\", \"Simultaneous\", options)))\n    + \"\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The submission mode determines when the candidate's responses are submitted for response processing. A testPart in individual mode requires the candidate to submit their responses on an item-by-item basis. In simultaneous mode the candidate's responses are all submitted together at the end of the testPart.\", options) : helperMissing.call(depth0, \"__\", \"The submission mode determines when the candidate's responses are submitted for response processing. A testPart in individual mode requires the candidate to submit their responses on an item-by-item basis. In simultaneous mode the candidate's responses are all submitted together at the end of the testPart.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n        <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .testpart-item-session-control\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Item Session Control\", options) : helperMissing.call(depth0, \"__\", \"Item Session Control\", options)))\n    + \"</h4>\\n\\n\\n<!-- assessmentTest/testPart/itemSessionControl -->\\n        <div class=\\\"testpart-item-session-control toggled\\\">\\n\\n<!-- assessmentTest/testPart/itemSessionControl/maxAttempts -->\\n            <div class=\\\"grid-row\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-max-attempts\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Max Attempts\", options) : helperMissing.call(depth0, \"__\", \"Max Attempts\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <input name=\\\"testpart-max-attempts\\\" type=\\\"text\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" value=\\\"1\\\" data-bind=\\\"itemSessionControl.maxAttempts\\\" data-bind-encoder=\\\"number\\\" />\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options) : helperMissing.call(depth0, \"__\", \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n<!-- assessmentTest/testPart/itemSessionControl/showFeedback -->\\n            <div class=\\\"grid-row pseudo-label-box\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-show-feedback\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Show Feedback\", options) : helperMissing.call(depth0, \"__\", \"Show Feedback\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" name=\\\"testpart-show-feedback\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.showFeedback\\\" data-bind-encoder=\\\"boolean\\\" />\\n                        <span class=\\\"icon-checkbox\\\" />\\n                    </label>\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint affects the visibility of feedback after the end of the last attempt.\", options) : helperMissing.call(depth0, \"__\", \"This constraint affects the visibility of feedback after the end of the last attempt.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/itemSessionControl/allowComment -->\\n            <div class=\\\"grid-row pseudo-label-box\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-allow-comment\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Comment\", options) : helperMissing.call(depth0, \"__\", \"Allow Comment\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" name=\\\"testpart-allow-comment\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.allowComment\\\" data-bind-encoder=\\\"boolean\\\" />\\n                        <span class=\\\"icon-checkbox\\\" />\\n                    </label>\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options) : helperMissing.call(depth0, \"__\", \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n<!-- assessmentTest/testPart/itemSessionControl/allowSkipping -->\\n            <div class=\\\"grid-row pseudo-label-box\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-allow-skipping\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Skipping\", options) : helperMissing.call(depth0, \"__\", \"Allow Skipping\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" name=\\\"testpart-allow-skipping\\\" value=\\\"true\\\" checked=\\\"checked\\\"  data-bind=\\\"itemSessionControl.allowSkipping\\\" data-bind-encoder=\\\"boolean\\\"   />\\n                        <span class=\\\"icon-checkbox\\\" />\\n                    </label>\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If the candidate can skip the item, without submitting a response.\", options) : helperMissing.call(depth0, \"__\", \"If the candidate can skip the item, without submitting a response.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n\\n        </div>\\n\\n        <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .testpart-time-limits\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time Limits\", options) : helperMissing.call(depth0, \"__\", \"Time Limits\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/testPart/timeLimits/minTime -->\\n        <div class=\\\"testpart-time-limits toggled\\\">\\n\\n\\n\\n<!-- assessmentTest/testPart/timeLimits/maxTime -->\\n            <div class=\\\"grid-row\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-max-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum Duration\", options) : helperMissing.call(depth0, \"__\", \"Maximum Duration\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <input type=\\\"text\\\" name=\\\"max-time\\\" value=\\\"00:00:00\\\" data-duration=\\\"HH:mm:ss\\\" data-bind=\\\"timeLimits.maxTime\\\" data-bind-encoder=\\\"time\\\" />\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum duration for this test part.\", options) : helperMissing.call(depth0, \"__\", \"Maximum duration for this test part.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n<!-- assessmentTest/testPart/timeLimits/allowLateSubmission -->\\n            <div class=\\\"grid-row pseudo-label-box\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-allow-late-submission\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Late submission allowed\", options) : helperMissing.call(depth0, \"__\", \"Late submission allowed\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" name=\\\"section-allow-late-submission\\\" value=\\\"true\\\" data-bind=\\\"timeLimits.allowLateSubmission\\\" data-bind-encoder=\\\"boolean\\\" />\\n                        <span class=\\\"icon-checkbox\\\" />\\n                    </label>\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Whether a candidate's response that is beyond the maximum duration of the test part should still be accepted.\", options) : helperMissing.call(depth0, \"__\", \"Whether a candidate's response that is beyond the maximum duration of the test part should still be accepted.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/section-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div id=\\\"section-props-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"section-props props clearfix\\\">\\n    <h3>\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h3>\\n\\n<!-- assessmentTest/testPart/assessmentSection/identifier -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"section-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"section-identifier\\\" data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $testIdFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The identifier of the section.\", options) : helperMissing.call(depth0, \"__\", \"The identifier of the section.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/title -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"section-title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Title\", options) : helperMissing.call(depth0, \"__\", \"Title\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"section-title\\\" data-bind=\\\"title\\\" data-validate=\\\"$notEmpty\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The section title.\", options) : helperMissing.call(depth0, \"__\", \"The section title.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/assessmentSection/visible -->\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"section-visible\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Visible\", options) : helperMissing.call(depth0, \"__\", \"Visible\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <label>\\n                <input type=\\\"checkbox\\\" name=\\\"section-visible\\\" value=\\\"true\\\" checked=\\\"checked\\\"  data-bind=\\\"visible\\\" data-bind-encoder=\\\"boolean\\\" />\\n                <span class=\\\"icon-checkbox\\\"></span>\\n            </label>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"A visible section is one that is identifiable by the candidate.\", options) : helperMissing.call(depth0, \"__\", \"A visible section is one that is identifiable by the candidate.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/keepTogether -->\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"section-keep-together\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Keep Together\", options) : helperMissing.call(depth0, \"__\", \"Keep Together\", options)))\n    + \"</label>\\n        </div>\\n\\n        <div class=\\\"col-6\\\">\\n            <label>\\n                <input type=\\\"checkbox\\\" name=\\\"section-keep-together\\\" value=\\\"true\\\" checked=\\\"checked\\\"  data-bind=\\\"keepTogether\\\" data-bind-encoder=\\\"boolean\\\" />\\n                <span class=\\\"icon-checkbox\\\"></span>\\n            </label>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"An invisible section with a parent that is subject to shuffling can specify whether or not its children, which will appear to the candidate as if they were part of the parent, are shuffled as a block or mixed up with the other children of the parent section.\", options) : helperMissing.call(depth0, \"__\", \"An invisible section with a parent that is subject to shuffling can specify whether or not its children, which will appear to the candidate as if they were part of the parent, are shuffled as a block or mixed up with the other children of the parent section.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .section-selection\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Selection\", options) : helperMissing.call(depth0, \"__\", \"Selection\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/testPart/assessmentSection/selection -->\\n    <div class=\\\"section-selection toggled\\\">\\n\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-enable-selection\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Enable selection\", options) : helperMissing.call(depth0, \"__\", \"Enable selection\", options)))\n    + \"</label>\\n            </div>\\n\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-enable-selection\\\"  />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/selection/select -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-select\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Select\", options) : helperMissing.call(depth0, \"__\", \"Select\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input name=\\\"section-select\\\" type=\\\"text\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" value=\\\"0\\\" data-bind=\\\"selection.select\\\"  data-bind-encoder=\\\"number\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The number of child elements to be selected.\", options) : helperMissing.call(depth0, \"__\", \"The number of child elements to be selected.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/selection/withReplacement -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-with-replacement\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"With Replacement\", options) : helperMissing.call(depth0, \"__\", \"With Replacement\", options)))\n    + \"</label>\\n            </div>\\n\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-with-replacement\\\" value=\\\"true\\\" data-bind=\\\"selection.withReplacement\\\"  data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"When selecting child elements each element is normally eligible for selection once only.\", options) : helperMissing.call(depth0, \"__\", \"When selecting child elements each element is normally eligible for selection once only.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .section-ordering\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Ordering\", options) : helperMissing.call(depth0, \"__\", \"Ordering\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/testPart/assessmentSection/ordering -->\\n    <div class=\\\"section-ordering toggled\\\">\\n<!-- assessmentTest/testPart/assessmentSection/ordering/shuffle -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-shuffle\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Shuffle\", options) : helperMissing.call(depth0, \"__\", \"Shuffle\", options)))\n    + \"</label>\\n            </div>\\n\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-shuffle\\\" value=\\\"true\\\" data-bind=\\\"ordering.shuffle\\\"  data-bind-encoder=\\\"boolean\\\"  />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If set, it causes the order of the child elements to be randomized, otherwise it uses the order in which the child elements are defined.\", options) : helperMissing.call(depth0, \"__\", \"If set, it causes the order of the child elements to be randomized, otherwise it uses the order in which the child elements are defined.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .section-item-session-control\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Item Session Control\", options) : helperMissing.call(depth0, \"__\", \"Item Session Control\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl -->\\n    <div class=\\\"section-item-session-control toggled\\\">\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl/maxAttempts -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-max-attempts\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Max Attempts\", options) : helperMissing.call(depth0, \"__\", \"Max Attempts\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input name=\\\"section-max-attempts\\\" type=\\\"text\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" value=\\\"1\\\" data-bind=\\\"itemSessionControl.maxAttempts\\\" data-bind-encoder=\\\"number\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options) : helperMissing.call(depth0, \"__\", \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl/showFeedback -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-show-feedback\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Show Feedback\", options) : helperMissing.call(depth0, \"__\", \"Show Feedback\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-show-feedback\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.showFeedback\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint affects the visibility of feedback after the end of the last attempt.\", options) : helperMissing.call(depth0, \"__\", \"This constraint affects the visibility of feedback after the end of the last attempt.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl/allowComment -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-allow-comment\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Comment\", options) : helperMissing.call(depth0, \"__\", \"Allow Comment\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-allow-comment\\\" value=\\\"true\\\"  data-bind=\\\"itemSessionControl.allowComment\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options) : helperMissing.call(depth0, \"__\", \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl/allowSkipping -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-allow-skipping\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Skipping\", options) : helperMissing.call(depth0, \"__\", \"Allow Skipping\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-allow-skipping\\\" value=\\\"true\\\" checked=\\\"checked\\\" data-bind=\\\"itemSessionControl.allowSkipping\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If the candidate can skip the item, without submitting a response.\", options) : helperMissing.call(depth0, \"__\", \"If the candidate can skip the item, without submitting a response.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .section-time-limits\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time Limits\", options) : helperMissing.call(depth0, \"__\", \"Time Limits\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/timeLimits -->\\n    <div class=\\\"section-time-limits toggled\\\">\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/assessmentSection/timeLimits/maxTime -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-max-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum Duration\", options) : helperMissing.call(depth0, \"__\", \"Maximum Duration\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"max-time\\\" value=\\\"00:00:00\\\" data-duration=\\\"HH:mm:ss\\\" data-bind=\\\"timeLimits.maxTime\\\" data-bind-encoder=\\\"time\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum duration for this section.\", options) : helperMissing.call(depth0, \"__\", \"Maximum duration for this section.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/timeLimits/allowLateSubmission -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-allow-late-submission\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Late submission allowed\", options) : helperMissing.call(depth0, \"__\", \"Late submission allowed\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-allow-late-submission\\\" value=\\\"true\\\" data-bind=\\\"timeLimits.allowLateSubmission\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Whether a candidate's response that is beyond the maximum duration of the section should still be accepted.\", options) : helperMissing.call(depth0, \"__\", \"Whether a candidate's response that is beyond the maximum duration of the section should still be accepted.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/itemref-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div id=\\\"itemref-props-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"itemref-props props clearfix\\\">\\n\\n    <h3>\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h3>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/identifier -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"itemref-identifier\\\" data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $testIdFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The identifier of the item reference.\", options) : helperMissing.call(depth0, \"__\", \"The identifier of the item reference.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/href -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-href\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Reference\", options) : helperMissing.call(depth0, \"__\", \"Reference\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"itemref-href\\\" data-bind=\\\"href\\\" readonly=\\\"readonly\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The reference.\", options) : helperMissing.call(depth0, \"__\", \"The reference.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n    \\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/category -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-category\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Categories\", options) : helperMissing.call(depth0, \"__\", \"Categories\", options)))\n    + \"</label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"itemref-category\\\" data-bind=\\\"categories\\\" data-bind-encoder=\\\"str2array\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Items can optionally be assigned to one or more categories.\", options) : helperMissing.call(depth0, \"__\", \"Items can optionally be assigned to one or more categories.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/required -->\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-required\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required\", options) : helperMissing.call(depth0, \"__\", \"Required\", options)))\n    + \"</label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <label>\\n                <input type=\\\"checkbox\\\" name=\\\"itemref-required\\\" value=\\\"true\\\" data-bind=\\\"required\\\" data-bind-encoder=\\\"boolean\\\" />\\n                <span class=\\\"icon-checkbox\\\"></span>\\n            </label>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If required it must appear (at least once) in the selection.\", options) : helperMissing.call(depth0, \"__\", \"If required it must appear (at least once) in the selection.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/fixed -->\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-fixed\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Fixed\", options) : helperMissing.call(depth0, \"__\", \"Fixed\", options)))\n    + \"</label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <label>\\n                <input type=\\\"checkbox\\\" name=\\\"itemref-fixed\\\" value=\\\"true\\\" data-bind=\\\"fixed\\\" data-bind-encoder=\\\"boolean\\\" />\\n                <span class=\\\"icon-checkbox\\\"></span>\\n            </label>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Not shuffled, the position remains fixed.\", options) : helperMissing.call(depth0, \"__\", \"Not shuffled, the position remains fixed.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .itemref-item-session-control\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Item Session Control\", options) : helperMissing.call(depth0, \"__\", \"Item Session Control\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl -->\\n    <div class=\\\"itemref-item-session-control toggled\\\">\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl/maxAttempts -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-max-attempts\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Max Attempts\", options) : helperMissing.call(depth0, \"__\", \"Max Attempts\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input name=\\\"itemref-max-attempts\\\" type=\\\"text\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" value=\\\"1\\\" data-bind=\\\"itemSessionControl.maxAttempts\\\" data-bind-encoder=\\\"number\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options) : helperMissing.call(depth0, \"__\", \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl/showFeedback -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-show-feedback\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Show Feedback\", options) : helperMissing.call(depth0, \"__\", \"Show Feedback\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"itemref-show-feedback\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.showFeedback\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint affects the visibility of feedback after the end of the last attempt.\", options) : helperMissing.call(depth0, \"__\", \"This constraint affects the visibility of feedback after the end of the last attempt.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl/allowComment -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-allow-comment\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Comment\", options) : helperMissing.call(depth0, \"__\", \"Allow Comment\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"itemref-allow-comment\\\" value=\\\"true\\\"  data-bind=\\\"itemSessionControl.allowComment\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options) : helperMissing.call(depth0, \"__\", \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl/allowSkipping -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-allow-skipping\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Skipping\", options) : helperMissing.call(depth0, \"__\", \"Allow Skipping\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"itemref-allow-skipping\\\" value=\\\"true\\\" checked=\\\"checked\\\" data-bind=\\\"itemSessionControl.allowSkipping\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If the candidate can skip the item, without submitting a response.\", options) : helperMissing.call(depth0, \"__\", \"If the candidate can skip the item, without submitting a response.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .itemref-time-limits\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time Limits\", options) : helperMissing.call(depth0, \"__\", \"Time Limits\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/timeLimits -->\\n    <div class=\\\"itemref-time-limits toggled\\\">\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/timeLimits/maxTime -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-max-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum Duration\", options) : helperMissing.call(depth0, \"__\", \"Maximum Duration\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"max-time\\\" value=\\\"00:00:00\\\" data-duration=\\\"HH:mm:ss\\\" data-bind=\\\"timeLimits.maxTime\\\" data-bind-encoder=\\\"time\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum duration for this item.\", options) : helperMissing.call(depth0, \"__\", \"Maximum duration for this item.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/timeLimits/allowLateSubmission -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-allow-late-submission\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Late submission allowed\", options) : helperMissing.call(depth0, \"__\", \"Late submission allowed\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"itemref-allow-late-submission\\\" value=\\\"true\\\" data-bind=\\\"timeLimits.allowLateSubmission\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Whether a candidate's response that is beyond the maximum duration of the item should still be accepted.\", options) : helperMissing.call(depth0, \"__\", \"Whether a candidate's response that is beyond the maximum duration of the item should still be accepted.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/rubricblock-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\";\n\n\n  buffer += \"<div class=\\\"rubricblock-props props clearfix\\\">\\n\\n    <h3>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Rubric Block\", options) : helperMissing.call(depth0, \"__\", \"Rubric Block\", options)))\n    + \": \";\n  if (helper = helpers.index) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.index); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h3>\\n\\n <!--assessmentTest/testPart/assessmentSection/sectionPart/rubrickBlocK/views -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Views\", options) : helperMissing.call(depth0, \"__\", \"Views\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <select name=\\\"view\\\" multiple=\\\"multiple\\\" data-bind=\\\"views\\\">\\n                <option value=\\\"author\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Author\", options) : helperMissing.call(depth0, \"__\", \"Author\", options)))\n    + \"</option>\\n                <option value=\\\"candidate\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Candidate\", options) : helperMissing.call(depth0, \"__\", \"Candidate\", options)))\n    + \"</option>\\n                <option value=\\\"proctor\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Proctor\", options) : helperMissing.call(depth0, \"__\", \"Proctor\", options)))\n    + \"</option>\\n                <option value=\\\"scorer\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Scorer\", options) : helperMissing.call(depth0, \"__\", \"Scorer\", options)))\n    + \"</option>\\n                <option value=\\\"testConstructor\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Test constructor\", options) : helperMissing.call(depth0, \"__\", \"Test constructor\", options)))\n    + \"</option>\\n                <option value=\\\"tutor\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Tutor\", options) : helperMissing.call(depth0, \"__\", \"Tutor\", options)))\n    + \"</option>\\n            </select>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Who can view the rubric block during the delivery.\", options) : helperMissing.call(depth0, \"__\", \"Who can view the rubric block during the delivery.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","define('taoQtiTest/controller/creator/templates/index',[\n'tpl!taoQtiTest/controller/creator/templates/testpart',\n'tpl!taoQtiTest/controller/creator/templates/section', \n'tpl!taoQtiTest/controller/creator/templates/rubricblock', \n'tpl!taoQtiTest/controller/creator/templates/itemref',\n'tpl!taoQtiTest/controller/creator/templates/item',\n'tpl!taoQtiTest/controller/creator/templates/test-props',\n'tpl!taoQtiTest/controller/creator/templates/testpart-props', \n'tpl!taoQtiTest/controller/creator/templates/section-props', \n'tpl!taoQtiTest/controller/creator/templates/itemref-props', \n'tpl!taoQtiTest/controller/creator/templates/rubricblock-props'], \n\nfunction(testPart, section, rubricBlock, itemRef, item, testProps, testPartProps, sectionProps, itemRefProps, rubricBlockProps){\n    'use strict';\n\n    /**\n     * Expose all the templates used by the test creator\n     * @exports taoQtiTest/controller/creator/templates/index\n     */\n    return {\n        'testpart'      : testPart,\n        'section'       : section,\n        'itemref'       : itemRef,\n        'item'          : item,\n        'rubricblock'   : rubricBlock,\n        'properties'    : {\n            'test'      : testProps,\n            'testpart'  : testPartProps,\n            'section'   : sectionProps,\n            'itemref'   : itemRefProps,\n            'rubricblock'   : rubricBlockProps\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/item',['jquery', 'taoQtiTest/controller/creator/templates/index'], function($, templates){\n    'use strict';\n  \n    var itemTemplate = templates.item;\n \n   /**\n     * The ItemView setup items related components\n     * @exports taoQtiTest/controller/creator/views/item\n     * @param {Function} loadItems - the function used to get items from the server\n     */\n   var itemView =  function(loadItems){\n            \n        var $panel     = $('.test-creator-items .item-selection'); \n        var $search    = $('#item-filter');\n        var $itemBox   = $('.item-box', $panel);\n        \n        if(typeof loadItems === 'function'){\n            //search pattern is empty the 1st time, give it undefined\n            loadItems(undefined, function(items){\n                update(items);\n                setUpLiveSearch();\n            });\n        }\n        \n        /**\n         * Set up the search behavior: once 3 chars are enters into the field,\n         * we load the items that matches the given search pattern.\n         * @private\n         */\n        function setUpLiveSearch (){\n            var timeout;\n            \n            var liveSearch = function(){\n                var pattern = $search.val();\n                if(pattern.length > 1 || pattern.length === 0){\n                    clearTimeout(timeout);\n                    timeout = setTimeout(function(){\n                        loadItems(pattern, function(items){\n                            update(items);\n                        });\n                    }, 300);\n                }\n            };\n            \n            //trigger the search on keyp and on the magnifer button click\n            $search.keyup(liveSearch)\n                     .siblings('.ctrl').click(liveSearch);\n        }\n        \n        /**\n         * Update the items list\n         * @private\n         * @param {Array} items - the new items\n         */\n        function update (items){\n            disableSelection();\n            $itemBox.empty().append(itemTemplate(items));\n            enableSelection();\n        }\n    \n        /**\n         * Disable the selectable component\n         * @private\n         * @param {Array} items - the new items\n         */\n        function disableSelection (){\n            if($panel.data('selectable')){\n                $panel.selectable('disable');\n            }\n        }\n    \n        /**\n         * Enable to select items to be added to sections\n         * using the jquery-ui selectable.\n         * @private\n         */\n        function enableSelection (){\n            \n            if($panel.data('selectable')){\n                $panel.selectable('enable');\n            } else {\n                $panel.selectable({\n                    filter: 'li',\n                    selected: function( event, ui ) {\n                        $(ui.selected).addClass('selected');\n                    },\n                    unselected: function( event, ui ) {\n                        $(ui.unselected).removeClass('selected');\n                    },\n                    stop: function(){\n                        $(this).trigger('itemselect.creator', $('.selected')); \n                    }\n                });\n            }\n        }\n   };\n    \n    return itemView;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/property',[\n'jquery', \n'ui', \n'core/databinder', \n'taoQtiTest/controller/creator/templates/index'], \nfunction($, ui, DataBinder, templates){\n    'use strict';\n\n    /**\n     * @callback PropertyViewCallback\n     * @param {propertyView} propertyView - the view object \n     */\n   \n    /**\n     * The PropertyView setup the property panel component\n     * \n     * @exports taoQtiTest/controller/creator/views/property\n     */\n   var propView = function propView(tmplName, model){\n       var $container = $('.test-creator-props');\n       var template = templates.properties[tmplName];\n       var $view;       \n\n       /**\n        * Opens the view for the 1st time\n        */ \n       var open = function propOpen(){\n            var databinder;\n            $container.children('.props').hide().trigger('propclose.propview');\n            $view = $(template(model)).appendTo($container).filter('.props'); \n            \n            //start listening for DOM compoenents inside the view\n            ui.startDomComponent($view);\n\n            //start the data binding\n            databinder = new DataBinder($view, model);\n            databinder.bind();\n    \n            propValidation(); \n\n            $view.trigger('propopen.propview');\n       };\n\n       /**\n        * Get the view container element\n        * @returns {jQueryElement}\n        */  \n       var getView = function propGetView(){\n            return $view;\n       };\n           \n       /**\n        * Check wheter the view is displayed\n        * @returns {boolean} true id opened\n        */  \n       var isOpen = function propIsOpen(){\n            return $view.css('display') !== 'none';\n       };\n\n       /**\n        * Bind a callback on view open\n        * @param {PropertyViewCallback} cb\n        */  \n       var onOpen = function propOnOpen(cb){\n            $view.on('propopen.propview', function(e){\n                e.stopPropagation();\n                cb(); \n            });\n       };\n\n       \n       /**\n        * Bind a callback on view close\n        * @param {PropertyViewCallback} cb\n        */  \n       var onClose = function propOnClose(cb){\n            $view.on('propclose.propview', function(e){\n                e.stopPropagation();\n                cb(); \n            });\n       };\n\n       /**\n        * Removes the property view\n        */  \n       var destroy = function propDestroy(){\n            $view.remove();\n       };\n       \n       /**\n        * Toggles the property view display\n        */  \n       var toggle = function propToggle(){\n            $container.children('.props').not($view).hide().trigger('propclose.propview');\n            if(isOpen()){\n                $view.hide().trigger('propclose.propview');\n            } else {\n                $view.show().trigger('propopen.propview');\n            }\n       };\n      \n       /**\n        * Set up the validation on the property view\n        * @private\n        */  \n       function propValidation() {\n            $view.on('validated.group', function(e, isValid){\n                if(e.namespace === 'group'){\n                    var $togglers = $('#test-creator .property-toggler, #saver');\n                    if(isValid === true){\n                        $togglers.removeClass('disabled');\n                    } else {\n                        $togglers.addClass('disabled');\n                    }\n                }\n            });\n            $view.groupValidator();\n        }\n\n      return {\n        open : open,\n        getView : getView,\n        isOpen : isOpen,\n        onOpen : onOpen,\n        onClose : onClose,\n        destroy : destroy,\n        toggle : toggle\n      }; \n   };\n\n   return propView;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/actions',[\n'jquery', \n'taoQtiTest/controller/creator/views/property'], \nfunction($, propertyView){\n    'use strict';\n\n    var disabledClass = 'disabled';\n    var activeClass = 'active';\n    var btnOnClass = 'tlb-button-on';\n\n    /**\n     * Set up the property view for an element\n     * @param {jQueryElement} $container - that contains the property opener\n     * @param {String} template - the name of the template to give to the propertyView\n     * @param {Object} model - the model to bind\n     * @param {PropertyViewCallback} cb - execute at view setup phase\n     */ \n    function properties ($container, template, model, cb) {\n        var propView = null;\n        $container.find('.property-toggler').on('click', function(e){\n            e.preventDefault();\n            var $elt = $(this);\n            if(!$(this).hasClass(disabledClass)){\n\n                $elt.blur(); //to remove the focus\n\n                if(propView === null){\n\n                    $container.addClass(activeClass);\n                    $elt.addClass(btnOnClass);\n\n                    propView = propertyView(template, model);\n                    propView.open();\n                    \n                    propView.onOpen(function(){\n                        $container.addClass(activeClass);\n                        $elt.addClass(btnOnClass);\n                    });\n                    propView.onClose(function(){\n                        $container.removeClass(activeClass);\n                        $elt.removeClass(btnOnClass);\n                    });\n\n                    if(typeof cb === 'function'){\n                        cb(propView);\n                    }\n                } else { \n                    propView.toggle();\n                } \n            }\n        });\n    }\n\n\n    /**\n     * Enable to move an element\n     * @param {jQueryElement} $actionContainer - where the mover is\n     * @param {String} containerClass - the cssClass of the element container\n     * @param {String} elementClass - the cssClass to identify elements \n     */ \n    function move ($actionContainer, containerClass, elementClass) {\n        var $element = $actionContainer.parents('.' + elementClass);\n        var $container = $element.parents('.' + containerClass ); \n   \n        //move up an element\n        $('.move-up', $actionContainer).click(function(e){\n            var $elements, index;\n    \n            //prevent default and click during animation\n            e.preventDefault();\n            if($element.is(':animated')){\n                return false;\n            }\n    \n            //get the position\n            $elements = $('.' + elementClass, $container);\n            console.log($elements.length);\n            index = $elements.index($element);\n            if (index > 0) {\n                $element.fadeOut(200, function(){\n                    console.log('.' + elementClass + ' :eq(' + (index - 1) + ')');\n                    $element\n                        .insertBefore($('.' + elementClass + ' :eq(' + (index - 1) + ')', $container))\n                        .fadeIn(400, function(){\n                            $container.trigger('change');\n                        });\n                });\n            }\n        });\n\n        //move down an element\n        $('.move-down', $actionContainer).click(function(e){\n            var $elements, index;\n    \n            //prevent default and click during animation\n            e.preventDefault();\n            if($element.is(':animated')){\n                return false;\n            }\n\n            //get the position\n            $elements = $('.' + elementClass, $container);\n            console.log($elements.length);\n            index = $elements.index($element);\n            if (index < ($elements.length - 1) && $elements.length > 1) {\n\n                console.log('.' + elementClass + ' :eq(' + (index + 1) + ')');\n                $element.fadeOut(200, function(){\n                    $element\n                        .insertAfter($('.' + elementClass + ' :eq(' + (index + 1) + ')', $container))\n                        .fadeIn(400, function(){\n                            $container.trigger('change');\n                        });\n                });\n            }\n        });\n    }\n   \n    /**\n     * Update the movable state of an element\n     * @param {jQueryElement} $container - the movable elements (scopped) \n     * @param {String} elementClass - the cssClass to identify elements \n     * @param {String} actionContainerElt - the element name that contains the actions \n     */ \n    function movable ($container, elementClass, actionContainerElt){\n        $container.each(function(){\n            var $elt = $(this);\n            var $actionContainer = $(actionContainerElt, $elt);\n\n            var index = $container.index($elt);\n            var $moveUp = $('.move-up', $actionContainer);\n            var $moveDown = $('.move-down', $actionContainer);\n            \n            //only one test part, no moving               \n            if( $container.length === 1 ){\n                $moveUp.addClass(disabledClass);\n                $moveDown.addClass(disabledClass);\n\n            //testpart is the first, only moving down\n            } else if(index === 0) {\n                $moveUp.addClass(disabledClass);\n                $moveDown.removeClass(disabledClass);\n\n            //testpart is the lasst, only moving up\n            } else if ( index >= ($container.length - 1) ) {\n                $moveDown.addClass(disabledClass);\n                $moveUp.removeClass(disabledClass);\n            \n            //or enable moving top/bottom\n            } else {\n                $moveUp.removeClass(disabledClass);\n                $moveDown.removeClass(disabledClass);\n            }\n         });\n    }\n\n    /**\n     * Update the removable state of an element\n     * @param {jQueryElement} $container - that contains the removable action\n     * @param {String} actionContainerElt - the element name that contains the actions \n     */ \n    function removable ($container, actionContainerElt){\n        $container.each(function(){\n            var $elt = $(this);\n            var $actionContainer = $(actionContainerElt, $elt);\n            var $delete = $('[data-delete]', $actionContainer);\n\n            if($container.length <= 1){\n                $delete.addClass(disabledClass);\n            } else {\n                $delete.removeClass(disabledClass);\n            }\n        });\n    }\n\n    /**\n     * Disable all the actions of the target\n     * @param {jQueryElement} $container - that contains the the actions\n     * @param {String} actionContainerElt - the element name that contains the actions \n     */ \n    function disable($container, actionContainerElt){\n        $container.find(actionContainerElt).find('[data-delete],.move-up,.move-down').addClass(disabledClass);    \n    }\n    \n    /**\n     * Enable all the actions of the target\n     * @param {jQueryElement} $container - that contains the the actions\n     * @param {String} actionContainerElt - the element name that contains the actions \n     */ \n    function enable($container, actionContainerElt){\n        $container.find(actionContainerElt).find('[data-delete],.move-up,.move-down').removeClass(disabledClass);    \n    }\n\n    /**\n     * The actions gives you shared behavior for some actions. \n     * \n     * @exports taoQtiTest/controller/creator/views/actions\n     */\n    return {\n        properties  : properties,\n        move        : move,\n        removable   : removable,\n        movable     : movable,\n        disable     : disable,\n        enable      : enable\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/itemref',[\n'jquery',\n'lodash', \n'i18n',\n'taoQtiTest/controller/creator/views/actions'],\nfunction($, _, __, actions){\n    'use strict';\n\n   /**\n    * Set up an item ref: init action beahviors. Called for each one.\n    *\n    * @param {jQueryElement} $itemRef - the itemRef element to set up\n    * @param {Object} model - the data model to bind to the ref\n    */\n   var setUp =  function setUp ($itemRef, model){\n\n        var $actionContainer = $('.actions', $itemRef);\n        \n        actions.properties($actionContainer, 'itemref', model, propHandler);\n        actions.move($actionContainer, 'itemrefs', 'itemref');\n\n        resize();\n\n        /**\n         * Perform some binding once the property view is create\n         * @private\n         * @param {propView} propView - the view object\n         */\n        function propHandler (propView) {\n\n            categoriesProperty(propView.getView().find('[name=itemref-category]'));\n            \n            $itemRef.parents('.testpart').on('delete', removePropHandler);\n            $itemRef.parents('.section').on('delete', removePropHandler);\n            $itemRef.on('delete', removePropHandler);\n            \n            function removePropHandler(e){\n                if(propView !== null){\n                    propView.destroy();\n                }\n            }\n        }\n\n        /**\n         * Set up the category property\n         * @private\n         * @param {jQueryElement} $select - the select box to set up\n         */\n        function categoriesProperty($select){\n            $select.select2({\n                width: '100%',\n                tags : [],\n                multiple : true,\n                tokenSeparators: [\",\", \" \", \";\"],\n                formatNoMatches : function(){\n                    return __('Enter a category');\n                },\n                maximumInputLength : 32\n            });\n        }\n   };\n\n   /**\n    * Listen for state changes to enable/disable . Called globally.\n    */\n   var listenActionState =  function listenActionState (){\n\n        var $actionContainer;\n        \n        $('.itemrefs').each(function(){\n            actions.movable($('.itemref', $(this)), 'itemref', '.actions');\n        });\n       \n        $(document)\n        .on('delete', function(e){\n            var $parent;\n            var $target = $(e.target);\n            if($target.hasClass('itemref')){\n                $parent = $target.parents('.itemrefs');\n                actions.disable($parent.find('.itemref'), '.actions');\n           }\n        })\n        .on('add change undo.deleter deleted.deleter', '.itemrefs',  function(e){\n            var $parent;\n            var $target = $(e.target);\n            if($target.hasClass('itemref') || $target.hasClass('itemrefs')){\n                $parent = $('.itemref', $target.hasClass('itemrefs') ? $target : $target.parents('.itemrefs'));\n                actions.enable($parent, '.actions');\n                actions.movable($parent, 'itemref', '.actions');\n            }\n        });\n   };\n\n    /**\n     * We need to resize the itemref in case of long labels\n     */\n    var resize = _.throttle(function resize(){\n        var $refs = $('.itemrefs').first();\n        var $actions = $('.itemref .actions').first();\n        var width = $refs.innerWidth() - $actions.outerWidth();\n        $('.itemref > .title').width(width); \n    }, 100);\n    \n    /**\n     * The itemrefView setup itemref related components and beahvior\n     * \n     * @exports taoQtiTest/controller/creator/views/itemref\n     */\n    return {\n        setUp : setUp,\n        listenActionState: listenActionState,\n        resize : resize\n   };\n \n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/ckConfigurator',['ui/ckeditor/ckConfigurator', 'mathJax'], function(ckConfigurator, mathJax) {\n    'use strict';\n\n    /**\n     * Generate a configuration object for CKEDITOR\n     *\n     * @param editor instance of ckeditor\n     * @param toolbarType block | inline | flow | qtiBlock | qtiInline | qtiFlow | reset to get back to normal\n     * @param {Object} [options] - is based on the CKEDITOR config object with some additional sugar\n     *        Note that it's here you need to add parameters for the resource manager.\n     *        Some options are not covered in http://docs.ckeditor.com/#!/api/CKEDITOR.config\n     * @param [options.dtdOverrides] - @see dtdOverrides which pre-defines them\n     * @param {Object} [options.positionedPlugins] - @see ckConfig.positionedPlugins\n     * @param {Boolean} [options.qtiImage] - enables the qtiImage plugin\n     * @param {Boolean} [options.qtiInclude] - enables the qtiInclude plugin\n     * @param {Boolean} [options.underline] - enables the underline plugin\n     * @param {Boolean} [options.mathJax] - enables the mathJax plugin\n     *\n     * @see http://docs.ckeditor.com/#!/api/CKEDITOR.config\n     */\n    var getConfig = function(editor, toolbarType, options){\n        options = options || {};\n\n        options.underline = true;\n\n        return ckConfigurator.getConfig(editor, toolbarType, options);\n    };\n\n    return {\n        getConfig : getConfig\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/rubricblock',[\n    'jquery',\n    'lodash',\n    'taoQtiTest/controller/creator/views/actions',\n    'helpers',\n    'ckeditor',\n    'taoQtiTest/controller/creator/helpers/ckConfigurator'\n], function($, _, actions, helpers, ckeditor, ckConfigurator){ // qtiClasses, creatorRenderer, XmlRenderer, simpleParser){\n    'use strict';\n\n    //compute ckeditor config only once\n    var ckConfig = ckConfigurator.getConfig(ckeditor, 'qtiBlock');\n\n    var filterPlugin = function filterPlugin(plugin){\n        return _.contains(['taoqtiimage', 'taoqtimedia','taoqtimaths', 'taoqtiinclude'], plugin);\n    };\n    ckConfig.plugins = _.reject(ckConfig.plugins.split(','), filterPlugin).join(',');\n    ckConfig.extraPlugins = _.reject(ckConfig.extraPlugins.split(','), filterPlugin).join(',');\n\n    /**\n     * Set up a rubric block: init action beahviors. Called for each one.\n     *\n     * @param {jQueryElement} $rubricBlock - the rubricblock to set up\n     */\n    var setUp = function setUp($rubricBlock, model, data){\n\n        actions.properties($rubricBlock, 'rubricblock', model, propHandler);\n        setUpEditor();\n\n        /**\n         * Perform some binding once the property view is create\n         * @private\n         * @param {propView} propView - the view object\n         */\n        function propHandler(propView){\n\n            rbViews(propView.getView());\n\n            $rubricBlock.parents('.testpart').on('delete', removePropHandler);\n            $rubricBlock.parents('.section').on('delete', removePropHandler);\n            $rubricBlock.on('delete', removePropHandler);\n\n            function removePropHandler(e){\n                if(propView !== null){\n                    propView.destroy();\n                }\n            }\n        }\n\n        /**\n         * Set up the views select box\n         * @private\n         * @param {jQuerElement} $propContainer - the element container\n         */\n        function rbViews($propContainer){\n            var $select = $('select', $propContainer);\n\n            $select.select2({\n                'width' : '100%'\n            }).on(\"select2-removed\", function(e){\n                if($select.select2('val').length === 0){\n                    $select.select2('val', [1]);\n                }\n            });\n\n            if($select.select2('val').length === 0){\n                $select.select2('val', [1]);\n            }\n        }\n\n        /**\n         * Set up ck editor\n         * @private\n         */\n        function setUpEditor(){\n            var editor;\n\n            //we need to synchronize the ck elt with an hidden elt that has data-binding\n            var $rubricBlockBinding = $('.rubricblock-binding', $rubricBlock);\n            var $rubricBlockContent = $('.rubricblock-content', $rubricBlock);\n            var syncRubricBlockContent = _.throttle(function(){\n                 $rubricBlockBinding\n                    .html($rubricBlockContent.html())\n                    .trigger('change');\n            }, 100);\n\n            $rubricBlockContent.empty().html($rubricBlockBinding.html());\n\n            editor = ckeditor.inline($rubricBlockContent[0], ckConfig);\n            editor.on('change', function(e) {\n                syncRubricBlockContent();\n            });\n        }\n    };\n\n    /**\n     * The rubriclockView setup RB related components and beahvior\n     *\n     * @exports taoQtiTest/controller/creator/views/rubricblock\n     */\n    return {\n        setUp : setUp\n    };\n\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/qtiTest',['lodash', 'i18n'], function(_, __){\n    'use strict';\n\n    /**\n     * Utils to manage the QTI Test model\n     * @exports taoQtiTest/controller/creator/qtiTestHelper\n     */\n    var qtiTestHelper = {\n\n        /**\n         * Extract qti identifiers from a model\n         * @param {Object} obj - the model to extract id from\n         * @returns {Array} the extracted identifiers\n         */\n        extractIdentifiers : function(obj){\n            var self = this;\n            var identifiers = [];\n            if(_.has(obj, 'identifier')){\n                identifiers = identifiers.concat(obj.identifier.toLowerCase());\n            }\n            _.flatten(_.forEach(obj, function(value) {\n                identifiers = identifiers.concat(typeof value === \"object\" ? self.extractIdentifiers(value) : []);\n            }), true);\n            return identifiers;\n        },\n\n        /**\n         * Get a valid and avialable qti identifier\n         * @param {String} qtiType - the type of element you want an id for\n         * @param {Array} lockedIdentifiers - the list of identifiers you cannot use anymore\n         * @returns {String} the identifier\n         */\n        getIdentifier : function(qtiType, lockedIdentifiers){\n            var index = 1;\n            var suggestion;\n            var glue =  '-';\n\n            do {\n                suggestion = qtiType +  glue + (index++);\n            } while(_.contains(lockedIdentifiers, suggestion.toLowerCase()));\n\n            lockedIdentifiers.push(suggestion.toLowerCase());\n\n            return suggestion;\n        },\n\n        /**\n         * Gives you a validator that check QTI id format\n         * @returns {Object} the validator\n         */\n        idFormatValidator : function(){\n            var qtiIdPattern = /^[_a-zA-Z]{1}[a-zA-Z0-9\\-._]{0,31}$/i;\n            return {\n                name : 'testIdFormat',\n                message : __('is not a valid identifier (alphanum, underscore, dash and dots.)'),\n                validate : function(value, callback){\n                    if(typeof callback === 'function'){\n                        callback(qtiIdPattern.test(value));\n                    }\n                }\n            };\n        },\n\n\n        /**\n         * Gives you a validator that check if a QTI id is available\n         * @param {Array} lockedIdentifiers - the list of identifiers you cannot use anymore\n         * @returns {Object} the validator\n         */\n        idAvailableValidator : function(lockedIdentifiers){\n            return {\n                name : 'testIdAvailable',\n                message : __('is already used in the test.'),\n                validate : function(value, callback, options){\n                    if(typeof callback === 'function'){\n                        callback(!_.contains(_.values(lockedIdentifiers), value.toLowerCase()) || (options.original && value === options.original));\n                    }\n                }\n            };\n        },\n\n        /**\n         * Does the value contains the type type\n         * @param {Object} value\n         * @param {string} type\n         * @returns {boolean}\n         */\n        filterQtiType : function (value, type){\n             return value['qti-type'] && value['qti-type'] === type;\n        },\n\n        /**\n         * Add the 'qti-type' properties to object that miss it, using the parent key name\n         * @param {Object|Array} collection\n         * @param {string} parentType\n         */\n        addMissingQtiType : function (collection, parentType) {\n              var self = this;\n              _.forEach(collection, function(value, key) {\n                if (_.isObject(value) && !_.isArray(value) && !_.has(value, 'qti-type')) {\n                    if (_.isNumber(key)) {\n                        if (parentType) {\n                            value['qti-type'] = parentType;\n                        }\n                    } else {\n                        value['qti-type'] = key;\n                    }\n                }\n                if (_.isArray(value)) {\n                    self.addMissingQtiType(value, key.replace(/s$/, ''));\n                } else if (_.isObject(value)) {\n                   self.addMissingQtiType(value);\n                }\n            });\n        },\n\n        /**\n         * Applies consolidation rules to the model\n         * @param {Object} model\n         * @returns {Object}\n         */\n        consolidateModel : function(model){\n            if(model && model.testParts && _.isArray(model.testParts) && model.testParts[0]){\n                var testPart = model.testParts[0];\n                if(testPart.assessmentSections && _.isArray(testPart.assessmentSections)){\n                     _.forEach(testPart.assessmentSections, function(assessmentSection, key) {\n\n                         //remove ordering is shuffle is false\n                         if(assessmentSection.ordering &&\n                                 assessmentSection.ordering.shuffle !== undefined && assessmentSection.ordering.shuffle === false){\n                             delete assessmentSection.ordering;\n                         }\n\n                          if(assessmentSection.rubricBlocks && _.isArray(assessmentSection.rubricBlocks)) {\n\n                              //remove rubrick blocks if empty\n                              if (assessmentSection.rubricBlocks.length === 0 ||\n                                      (assessmentSection.rubricBlocks.length === 1 && assessmentSection.rubricBlocks[0].content.length === 0) ) {\n\n                                  delete assessmentSection.rubricBlocks;\n                              }\n                              //ensure the view attribute is present\n                              else if(assessmentSection.rubricBlocks.length > 0){\n                                _.forEach(assessmentSection.rubricBlocks, function(rubricBlock){\n                                        rubricBlock.views = ['candidate'];\n                                        //change once views are supported\n                                        //if(rubricBlock && rubricBlock.content && (!rubricBlock.views || (_.isArray(rubricBlock.views) && rubricBlock.views.length === 0))){\n                                            //rubricBlock.views = ['candidate'];\n                                        //}\n                                  });\n                              }\n                        }\n                     });\n                }\n            }\n            return model;\n        }\n    };\n\n    return  qtiTestHelper;\n});\n\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/section',[\n    'jquery', 'lodash', 'uri',\n    'taoQtiTest/controller/creator/views/actions',\n    'taoQtiTest/controller/creator/views/itemref',\n    'taoQtiTest/controller/creator/views/rubricblock',\n    'taoQtiTest/controller/creator/templates/index',\n    'taoQtiTest/controller/creator/helpers/qtiTest'\n],\nfunction($, _, uri, actions, itemRefView, rubricBlockView, templates, qtiTestHelper){\n    'use strict';\n\n   /**\n    * Set up a section: init action beahviors. Called for each section.\n    *\n    * @param {jQueryElement} $sectuin - the section to set up\n    * @param {Object} model - the data model to bind to the test part\n    * @param {Object} [data] - additionnal data used by the setup\n    * @param {Array} [data.identifiers] - the locked identifiers\n    */\n   var setUp = function setUp ($section, model, data){\n\n        var $actionContainer = $('h2', $section);\n\n\n        actions.properties($actionContainer, 'section', model, propHandler);\n        actions.move($actionContainer, 'sections', 'section');\n        itemRefs();\n        acceptItemRefs();\n        rubricBlocks();\n        addRubricBlock();\n\n        //trigger for the case the section is added an a selection is ongoing\n\n\n        /**\n         *  Perform some binding once the property view is create\n         *  @param {propView} propView - the view object\n         */\n        function propHandler (propView) {\n\n            var $view = propView.getView();\n\n           //enable/disable selection\n           var $selectionSwitcher = $('[name=section-enable-selection]', $view);\n           var $selectionSelect = $('[name=section-select]', $view);\n           var $selectionWithRep = $('[name=section-with-replacement]', $view);\n\n           var switchSelection = function switchSelection(){\n                if($selectionSwitcher.prop('checked') === true){\n                   $selectionSelect.incrementer('enable');\n                   $selectionWithRep.removeClass('disabled');\n                } else {\n                   $selectionSelect.incrementer('disable');\n                   $selectionWithRep.addClass('disabled');\n                }\n           };\n           $selectionSwitcher.on('change', switchSelection);\n           $selectionSwitcher.on('change', function updateModel(){\n                if(!$selectionSwitcher.prop('checked')){\n                    $selectionSelect.val(0);\n                    $selectionWithRep.prop('checked', false);\n                    delete model.selection;\n                }\n           });\n\n           $selectionSwitcher.prop('checked', !!model.selection).trigger('change');\n\n           //listen for databinder change to update the test part title\n           var $title =  $('[data-bind=title]', $section);\n           $view.on('change.binder', function(e, model){\n                if(e.namespace === 'binder' && model['qti-type'] === 'assessmentSection'){\n                    $title.text(model.title);\n                }\n            });\n\n            $section.parents('.testpart').on('deleted.deleter', removePropHandler);\n            $section.on('deleted.deleter', removePropHandler);\n\n            function removePropHandler(){\n                if(propView !== null){\n                    propView.destroy();\n                }\n            }\n        }\n\n        /**\n         * Set up the item refs that already belongs to the section\n         * @private\n         */\n        function itemRefs(){\n\n            if(!model.sectionParts){\n                model.sectionParts = [];\n            }\n            $('.itemref', $section).each(function(){\n                var $itemRef = $(this);\n                var index = $itemRef.data('bind-index');\n                if(!model.sectionParts[index]){\n                    model.sectionParts[index] = {};\n                }\n\n                itemRefView.setUp($itemRef, model.sectionParts[index]);\n                $itemRef.find('.title').text(\n                    data.labels[uri.encode($itemRef.data('uri'))]\n                );\n            });\n        }\n\n        /**\n         * Make the section to accept the selected items\n         * @private\n         */\n        function acceptItemRefs(){\n            var $selected;\n            var $items     = $('.test-creator-items');\n\n             //the item selector trigger a select event\n             $items.on('itemselect.creator', function(e){\n                var selection = Array.prototype.slice.call(arguments, 1);\n                var $placeholder = $('.itemref-placeholder', $section);\n                var $placeholders = $('.itemref-placeholder');\n                \n                if(selection.length > 0){\n                    $placeholder.show().off('click').on('click', function(e){\n                        \n                        //prepare the item data \n                        var defaultItemData = {};\n                        if(model.itemSessionControl && !_.isUndefined(model.itemSessionControl.maxAttempts)){\n                            //for a matter of consistency, the itemRef will \"inherit\" the itemSessionControl configuration from its parent section\n                            defaultItemData.itemSessionControl = _.clone(model.itemSessionControl);\n                        }\n                        \n                        _.forEach(selection, function(item){\n                            var $item = $(item);\n\n                            addItemRef($('.itemrefs', $section), undefined, _.defaults({\n                                href        : uri.decode($item.data('uri')),\n                                label       : $.trim($item.clone().children().remove().end().text()),\n                                'qti-type'  : 'assessmentItemRef'\n                            }, defaultItemData));\n                        });\n\n                        //reset the current selection\n                        $('.ui-selected', $items).removeClass('ui-selected').removeClass('selected');\n                        $placeholders.hide().off('click');\n                    });\n                } else {\n                    $placeholders.hide().off('click');\n                }\n             });\n\n\n            //we listen the event not from the adder but  from the data binder to be sure the model is up to date\n            $(document)\n              .off('add.binder', '#' + $section.attr('id') + ' .itemrefs')\n              .on('add.binder', '#' + $section.attr('id') + ' .itemrefs', function(e, $itemRef){\n                if(e.namespace === 'binder' && $itemRef.hasClass('itemref')){\n                    var index = $itemRef.data('bind-index');\n\n                    //initialize the new item ref\n                    itemRefView.setUp($itemRef, model.sectionParts[index]);\n                }\n            });\n\n            //on set up, if there is a selection ongoing, we trigger the event\n            $selected = $('.selected', $items);\n            if($selected.length > 0){\n                $items.trigger('itemselect.creator', $selected);\n            }\n\n        }\n\n        /**\n         * Add a new item ref to the section\n         * @param {jQueryElement} $refList - the element to add the item to\n         * @param {Number} [index] - the position of the item to add\n         * @param {Object} [itemData] - the data to bind to the new item ref\n         */\n        function addItemRef($refList, index, itemData){\n           var $itemRef;\n           var $items = $refList.children('li');\n           index = index || $items.length;\n           itemData.identifier = qtiTestHelper.getIdentifier('item', data.identifiers);\n           itemData.index = index + 1;\n           $itemRef = $(templates.itemref(itemData));\n           if(index > 0){\n               $itemRef.insertAfter($items.eq(index - 1));\n           } else {\n               $itemRef.appendTo($refList);\n           }\n           $refList.trigger('add', [$itemRef, itemData]);\n        }\n\n\n        /**\n         * Set up the rubric blocks that already belongs to the section\n         * @private\n         */\n        function rubricBlocks () {\n            if(!model.rubricBlocks){\n                model.rubricBlocks = [];\n            }\n            $('.rubricblock', $section).each(function(){\n                var $rubricBlock = $(this);\n                var index = $rubricBlock.data('bind-index');\n                if(!model.rubricBlocks[index]){\n                    model.rubricBlocks[index] = {};\n                }\n\n                rubricBlockView.setUp($rubricBlock, model.rubricBlocks[index], data);\n            });\n\n            //opens the rubric blocks section if they are there.\n            if(model.rubricBlocks.length > 0){\n                $('.rub-toggler', $section).trigger('click');\n            }\n        }\n\n        /**\n         * Enable to add new rubrick block\n         * @private\n         */\n        function addRubricBlock () {\n\n            $('.rublock-adder', $section).adder({\n                target: $('.rubricblocks', $section),\n                content : templates.rubricblock,\n                templateData : function(cb){\n                    cb({\n                        'qti-type' : 'rubricBlock',\n                        index  : $('.rubricblock', $section).length,\n                        content : [],\n                        views : [1]\n                    });\n                }\n            });\n\n            //we listen the event not from the adder but  from the data binder to be sure the model is up to date\n            $(document).on('add.binder', '#' + $section.attr('id') + ' .rubricblocks', function(e, $rubricBlock){\n                if(e.namespace === 'binder' && $rubricBlock.hasClass('rubricblock')){\n                    var index = $rubricBlock.data('bind-index');\n                    $('.rubricblock-binding', $rubricBlock).html('<p>&nbsp;</p>');\n                    rubricBlockView.setUp($rubricBlock, model.rubricBlocks[index], data);\n                }\n            });\n        }\n   };\n\n   /**\n    * Listen for state changes to enable/disable . Called globally.\n    */\n   var listenActionState =  function listenActionState (){\n\n        var $sections;\n        var $actionContainer;\n\n        $('.sections').each(function(){\n            $sections = $('.section', $(this));\n\n            actions.removable($sections, 'h2');\n            actions.movable($sections, 'section', 'h2');\n        });\n\n        $(document)\n        .on('delete', function(e){\n            var $parent;\n            var $target = $(e.target);\n            if($target.hasClass('section')){\n                $parent = $target.parents('.sections');\n                actions.disable($parent.find('.section'), 'h2');\n           }\n        })\n        .on('add change undo.deleter deleted.deleter', function(e){\n            var $target = $(e.target);\n            if($target.hasClass('section') || $target.hasClass('sections')){\n                $sections = $('.section', $target.hasClass('sections') ? $target : $target.parents('.sections'));\n                actions.removable($sections, 'h2');\n                actions.movable($sections, 'section', 'h2');\n            }\n        })\n        .on('open.toggler', '.rub-toggler', function(e){\n            if(e.namespace === 'toggler'){\n               $(this).parents('h2').addClass('active');\n            }\n        })\n        .on('close.toggler', '.rub-toggler', function(e){\n            if(e.namespace === 'toggler'){\n               $(this).parents('h2').removeClass('active');\n            }\n        });\n   };\n\n\n   /**\n     * The sectionView setup section related components and beahvior\n     *\n     * @exports taoQtiTest/controller/creator/views/section\n     */\n    return {\n        setUp : setUp,\n        listenActionState: listenActionState\n   };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/testpart',[\n'jquery', 'lodash', \n'taoQtiTest/controller/creator/views/actions', \n'taoQtiTest/controller/creator/views/section',\n'taoQtiTest/controller/creator/templates/index', \n'taoQtiTest/controller/creator/helpers/qtiTest'],\nfunction($, _, actions, sectionView, templates, qtiTestHelper){\n    'use strict';\n\n   /**\n    * Set up a test part: init action beahviors. Called for each test part.\n    *\n    * @param {jQueryElement} $testPart - the testpart to set up\n    * @param {Object} model - the data model to bind to the test part\n    * @param {Object} [data] - additionnal data used by the setup\n    * @param {Array} [data.identifiers] - the locked identifiers\n    */\n   var setUp =  function setUp ($testPart, model, data){\n\n        var $actionContainer = $('h1', $testPart);\n\n        //run setup methods\n        actions.properties($actionContainer, 'testpart', model, propHandler);\n        actions.move($actionContainer, 'testparts', 'testpart');\n        sections();\n        addSection();\n\n        /**\n         * Perform some binding once the property view is created\n         * @private\n         * @param {propView} propView - the view object\n         */\n        function propHandler (propView) {\n            \n           var $view = propView.getView();\n\n            //listen for databinder change to update the test part title\n           var $identifier =  $('[data-bind=identifier]', $testPart);\n           $view.on('change.binder', function(e, model){\n                if(e.namespace === 'binder' && model['qti-type'] === 'testPart'){\n                    $identifier.text(model.identifier);\n                }\n            });\n\n            //destroy it when it's testpart is removed\n            $testPart.on('delete', function(e){\n                if(propView !== null){\n                    propView.destroy();\n                }\n            });\n        }\n\n        /**\n         * Set up sections that already belongs to the test part\n         * @private\n         */\n        function sections(){\n            if(!model.assessmentSections){\n                model.assessmentSections = [];\n            }                   \n            $('.section', $testPart).each(function(){\n                var $section = $(this);\n                var index = $section.data('bind-index');\n                if(!model.assessmentSections[index]){\n                    model.assessmentSections[index] = {};\n                }\n\n                sectionView.setUp($section, model.assessmentSections[index], data);\n            });\n        }\n\n        /**\n         * Enable to add new sections\n         * @private\n         */\n        function addSection(){\n            $('.section-adder', $testPart).adder({\n                target: $('.sections', $testPart),\n                content : templates.section,\n                templateData : function(cb){\n\n                    //create a new section model object to be bound to the template\n                    var sectionIndex = $('.section', $testPart).length;\n                    cb({\n                        'qti-type' : 'assessmentSection',\n                        identifier : qtiTestHelper.getIdentifier('assessmentSection',  data.identifiers),\n                        title : 'Section ' + (sectionIndex + 1),\n                        index : 0,\n                        sectionParts : []             \n                    });\n                }\n            });\n            \n                   \n \n            //we listen the event not from the adder but  from the data binder to be sure the model is up to date\n            $(document)\n              .off('add.binder', '#' + $testPart.attr('id') + ' .sections')\n              .on ('add.binder', '#' + $testPart.attr('id') + ' .sections', function(e, $section){\n                if(e.namespace === 'binder' && $section.hasClass('section')){\n                    var index = $section.data('bind-index'); \n                    //initialize the new test part\n                    sectionView.setUp($section, model.assessmentSections[index], data);\n                }\n            });\n        }\n\n   };\n   \n   /**\n    * Listen for state changes to enable/disable . Called globally.\n    */\n   var listenActionState =  function listenActionState (){\n\n        var $testParts = $('.testpart');\n        \n        actions.removable($testParts, 'h1');\n        actions.movable($testParts, 'testpart', 'h1');\n\n        $('.testparts')\n        .on('delete', function(e){\n            var $target = $(e.target);\n            if($target.hasClass('testpart')){\n                actions.disable($('.testpart'), 'h1');\n           }\n        })\n        .on('add change undo.deleter deleted.deleter', function(e){\n            var $target = $(e.target);\n\n            if($target.hasClass('testpart') || $target.hasClass('testparts')){\n                \n                //refresh\n                $testParts = $('.testpart');\n\n                //check state\n                actions.removable($testParts, 'h1');\n                actions.movable($testParts, 'testpart', 'h1');\n            }\n        });\n   };\n \n    /**\n     * The testPartView setup testpart related components and beahvior\n     * \n     * @exports taoQtiTest/controller/creator/views/testpart\n     */\n    return {\n        setUp : setUp,\n        listenActionState: listenActionState\n   }; \n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/test',[\n'jquery', 'lodash',\n'taoQtiTest/controller/creator/views/actions', \n'taoQtiTest/controller/creator/views/testpart',\n'taoQtiTest/controller/creator/templates/index',\n'taoQtiTest/controller/creator/helpers/qtiTest'\n], \nfunction($, _, actions, testPartView, templates, qtiTestHelper){\n    'use strict';\n \n   /**\n     * The TestView setup test related components and beahvior\n     * \n     * @exports taoQtiTest/controller/creator/views/test\n     * @param {Object} model - the data model to bind to the test\n     * @param {Object} [data] - additionnal data used by the setup\n     * @param {Array} [data.identifiers] - the locked identifiers\n     */\n   var testView = function testView (model, data) {\n       \n        actions.properties($('.test-creator-test > h1'), 'test', model, propHandler);\n        testParts();\n        addTestPart();\n\n        /**\n         * set up the exisiting test part views\n         * @private\n         */\n        function testParts () {\n            if(!model.testParts){\n                model.testParts = [];\n            }                   \n            $('.testpart').each(function(){\n                var $testPart = $(this);\n                var index = $testPart.data('bind-index');\n                if(!model.testParts[index]){\n                    model.testParts[index] = {};\n                }\n\n                testPartView.setUp($testPart, model.testParts[index], data);\n            });\n        }\n        \n        /**\n         * Perform some binding once the property view is created\n         * @private\n         * @param {propView} propView - the view object\n         */\n        function propHandler (propView) {\n            \n           var $view = propView.getView();\n\n            //listen for databinder change to update the test part title\n           var $title =  $('.test-creator-test > h1 [data-bind=title]');\n           $view.on('change.binder', function(e, model){\n                if(e.namespace === 'binder' && model['qti-type'] === 'assessmentTest'){\n                    $title.text(model.title);\n                }\n            });\n        }\n\n        /**\n         * Enable to add new test parts\n         * @private\n         */\n        function addTestPart () {\n\n            $('.testpart-adder').adder({\n                target: $('.testparts'),\n                content : templates.testpart,\n                templateData : function(cb){\n\n                    //create an new testPart model object to be bound to the template\n                    var testPartIndex = $('.testpart').length;\n                    cb({\n                        'qti-type' : 'testPart',\n                        identifier : qtiTestHelper.getIdentifier('testPart', data.identifiers),\n                        index  : testPartIndex,\n                        navigationMode : 0,\n                        submissionMode : 0,\n                        assessmentSections : [{\n                            'qti-type' : 'assessmentSection',\n                            identifier : qtiTestHelper.getIdentifier('assessmentSection',  data.identifiers),\n                            title : 'Section 1',\n                            index : 0,\n                            sectionParts : []             \n                        }]\n                    });\n                }\n            });\n            \n            //we listen the event not from the adder but  from the data binder to be sure the model is up to date\n            $(document)\n              .off('add.binder', '.testparts')\n              .on ('add.binder', '.testparts', function(e, $testPart, added){\n                if(e.namespace === 'binder' && $testPart.hasClass('testpart')){\n                    //initialize the new test part\n                    testPartView.setUp($testPart, model.testParts[added.index], data);\n                }\n            });\n        }\n    };\n\n    return testView;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/encoders/dom2qti',['jquery', 'lodash'], function($, _){\n    'use strict';\n\n   /**\n    * Get the list of objects attributes to encode\n    * @param {Object} object\n    * @returns {Array}\n    */\n   var getAttributes = function getAttributes(object){\n        return _.omit(object, [\n           'qti-type',\n           'content',\n           'xmlBase',\n           'lang',\n           'label'\n        ]);\n   };\n\n   /**\n    * Encode object's properties to xml/html string attributes\n    * @param {Object} attributes\n    * @returns {string}\n    */\n   var attrToStr = function attrToStr(attributes){\n     return _.reduce(attributes, function(acc, value, key){\n         if(_.isNumber(value) || (_.isString(value) && !_.isEmpty(value)) ){\n             return acc + ' ' + key + '=\"'+ value + '\" ';\n         }\n         return acc;\n     }, '');\n   };\n\n   /**\n    * This encoder is used to transform DOM to JSON QTI and JSON QTI to DOM.\n    * It works now for the rubricBlocks components.\n    * @exports creator/encoders/dom2qti\n    */\n   var Dom2QtiEncoder = {\n\n       /**\n        * Encode an object to a dom string\n        * @param {Object} modelValue\n        * @returns {string}\n        */\n       encode : function(modelValue){\n           var self = this;\n\n           if(_.isArray(modelValue)){\n               return _.reduce(modelValue, function(result, value){\n                   return result + self.encode(value);\n               }, '');\n           } else if(_.isObject(modelValue) && modelValue['qti-type']){\n                if(modelValue['qti-type'] === 'textRun'){\n                    return modelValue.content;\n                }\n                var startTag = '<' + modelValue['qti-type'] + attrToStr(getAttributes(modelValue));\n                if(modelValue.content){\n                    return  startTag + '>' + self.encode(modelValue.content) + '</' + modelValue['qti-type'] + '>';\n                } else {\n                    return startTag + '/>';\n                }\n           }\n           return modelValue;\n       },\n\n       /**\n        * Decode a string that represents a DOM to a QTI formated object\n        * @param {string} nodeValue\n        * @returns {Array}\n        */\n       decode : function(nodeValue){\n           var self = this;\n           var $nodeValue = (nodeValue instanceof $) ? nodeValue : $(nodeValue);\n           var result = [];\n\n           _.forEach($nodeValue, function(elt){\n               var object;\n                if (elt.nodeType === 3) {\n                    if (!_.isEmpty($.trim(elt.nodeValue))) {\n                        result.push({\n                            'qti-type': 'textRun',\n                            'content': elt.nodeValue,\n                            \"xmlBase\": \"\"\n                        });\n                    }\n                } else if (elt.nodeType === 1){\n                    object = _.merge({\n                            'qti-type': elt.nodeName.toLowerCase(),\n                            'id' : '',\n                            'class' : '',\n                            'xmlBase' : '',\n                            'lang' : '',\n                            'label' : ''\n                        },\n                        _.transform(elt.attributes, function(acc, value) {\n                            if(value.nodeName){\n                                acc[value.nodeName] = value.nodeValue;\n                            }\n                        })\n                    );\n                    if (elt.childNodes.length > 0) {\n                        object.content = self.decode(elt.childNodes);\n                    }\n                    result.push(object);\n                }\n            });\n           return result;\n       }\n   };\n\n   return Dom2QtiEncoder;\n});\n\n\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/creator',[\n    'module',\n    'jquery',\n    'lodash',\n    'helpers',\n    'i18n',\n    'history',\n    'ui/feedback',\n    'core/databindcontroller',\n    'taoQtiTest/controller/creator/views/item',\n    'taoQtiTest/controller/creator/views/test',\n    'taoQtiTest/controller/creator/views/testpart',\n    'taoQtiTest/controller/creator/views/section',\n    'taoQtiTest/controller/creator/views/itemref',\n    'taoQtiTest/controller/creator/encoders/dom2qti',\n    'taoQtiTest/controller/creator/templates/index',\n    'taoQtiTest/controller/creator/helpers/qtiTest',\n    'core/validator/validators'\n], function(\n    module,\n    $,\n    _,\n    helpers,\n    __,\n    history,\n    feedback,\n    DataBindController,\n    itemView, testView,\n    testPartView,\n    sectionView,\n    itemrefView,\n    Dom2QtiEncoder,\n    templates,\n    qtiTestHelper,\n    validators\n    ){\n\n    'use strict';\n\n    /**\n     * Generic callback used when retrieving data from the server\n     * @callback DataCallback\n     * @param {Object} data - the received data\n     */\n\n    /**\n     * Call the server to get the list of items\n     * @param {string} url\n     * @param {string} search - a posix pattern to filter items\n     * @param {DataCallback} cb - with items\n     */\n    function loadItems(url, search, cb){\n        $.getJSON(url, {pattern : search, notempty : 'true'}, function(data){\n            if(data && typeof cb === 'function'){\n                cb(data);\n            }\n        });\n    }\n\n\n    /**\n     * The test creator controller is the main entry point\n     * and orchestrates data retrieval and view/components loading.\n     * @exports creator/controller\n     */\n    var Controller = {\n\n         routes : {},\n\n         identifiers: [],\n\n         /**\n          * Start the controller, main entry method.\n          * @public\n          * @param {Object} options\n          * @param {Object} options.labels - the list of item's labels to give to the ItemView\n          * @param {Object} options.routes - action's urls\n          */\n         start : function(options){\n            var self = this;\n            var $container = $('#test-creator');\n            var $saver = $('#saver');\n\n\n            options = _.merge(module.config(), options || {});\n            options.routes = options.routes || {};\n            options.labels = options.labels || {};\n\n\n            //back button\n            $('#authoringBack').on('click', function(e){\n                e.preventDefault();\n\n                if (history) {\n                    history.back();\n                }\n            });\n\n            //set up the ItemView, give it a configured loadItems ref\n            itemView( _.partial(loadItems, options.routes.items) );\n\n            //Print data binder chandes for DEBUGGING ONLY\n            //$container.on('change.binder', function(e, model){\n                //if(e.namespace === 'binder'){\n                    //console.log(model);\n                //}\n            //});\n\n            //Data Binding options\n            var binderOptions = _.merge(options.routes, {\n                filters : {\n                    'isItemRef' : function(value){\n                        return qtiTestHelper.filterQtiType(value, 'assessmentItemRef');\n                    },\n                    'isSection' : function(value){\n                        return qtiTestHelper.filterQtiType(value, 'assessmentSection');\n                    }\n                },\n                encoders : {\n                  'dom2qti' : Dom2QtiEncoder\n                },\n                templates : templates,\n                beforeSave : function(model){\n                    //ensure the qti-type is present\n                    qtiTestHelper.addMissingQtiType(model);\n\n                    //apply consolidation rules\n                    qtiTestHelper.consolidateModel(model);\n                    return true;\n                }\n            });\n\n            //set up the databinder\n            var binder = DataBindController\n                .takeControl($container, binderOptions)\n                .get(function(model){\n\n                    //extract ids\n                    self.identifiers = qtiTestHelper.extractIdentifiers(model);\n\n                    //register validators\n                    validators.register('testIdFormat', qtiTestHelper.idFormatValidator());\n                    validators.register('testIdAvailable', qtiTestHelper.idAvailableValidator(self.identifiers));\n\n                    //once model is loaded, we set up the test view\n                    testView(model, {\n                        uri : options.uri,\n                        identifiers : self.identifiers,\n                        labels : options.labels\n                    });\n\n                    //listen for changes to update available actions\n                    testPartView.listenActionState();\n                    sectionView.listenActionState();\n                    itemrefView.listenActionState();\n                    itemrefView.resize();\n\n                    $(window)\n                      .off('resize.qti-test-creator')\n                      .on('resize.qti-test-creator', function(){\n                            itemrefView.resize();\n                    });\n                });\n\n            //the save button triggers binder's save action.\n            $saver.on('click', function(event){\n                event.preventDefault();\n\n                if(!$saver.hasClass('disabled')){\n                    $saver.attr('disabled', true).addClass('disabled');\n                    binder.save(function(){\n\n                        $saver.attr('disabled', false).removeClass('disabled');\n\n                        feedback().success(__('Test Saved'));\n\n                    }, function(){\n\n                        $saver.attr('disabled', false).removeClass('disabled');\n                    });\n                }\n            });\n        }\n    };\n\n    return Controller;\n});\n\n","\ndefine('tpl!taoQtiTest/testRunner/tpl/button', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<li data-control=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"small btn-info action\\\" title=\\\"\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-order=\\\"\";\n  if (helper = helpers.order) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.order); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    <a class=\\\"li-inner\\\" href=\\\"#\\\">\\n        <span class=\\\"icon-\";\n  if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></span>\\n        <span class=\\\"label\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n    </a>\\n</li>\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n *\n */\n\n/**\n * This module allows adding extra buttons in the action bar of the test runner\n *\n */\ndefine('taoQtiTest/testRunner/actionBarHook',[\n    'jquery',\n    'lodash',\n    'core/errorHandler',\n    'tpl!taoQtiTest/testRunner/tpl/button'\n], function($, _, errorHandler, buttonTpl){\n\n    'use strict';\n\n    var _ns = '.actionBarHook';\n\n    /**\n     * Check that the toolConfig is correct\n     *\n     * @param {Object} toolconfig\n     * @param {String} toolconfig.label - the label to be displayed in the button\n     * @param {String} toolconfig.hook - the amd module to be loaded to initialize the button\n     * @param {String} [toolconfig.icon] - the icon to be displayed in the button\n     * @param {String} [toolconfig.title] - the title to be displayed in the button\n     * @returns {unresolved}\n     */\n    function isValidConfig(toolconfig){\n        return _.isObject(toolconfig) && toolconfig.label && toolconfig.hook;\n    }\n\n    /**\n     * Init a test runner button from its config\n     *\n     * @param {String} id\n     * @param {Object} toolconfig\n     * @param {String} toolconfig.label - the label to be displayed in the button\n     * @param {String} toolconfig.hook - the amd module to be loaded to initialize the button\n     * @param {String} [toolconfig.icon] - the icon to be displayed in the button\n     * @param {String} [toolconfig.title] - the title to be displayed in the button\n     * @param {Object} assessmentTestContext - the complete state of the test\n     * @param {Object} testRunner - the test runner instance\n     * @fires ready.actionBarHook when the hook has been initialized\n     * @returns {undefined}\n     */\n    function initQtiTool($toolsContainer, id, toolconfig, assessmentTestContext, testRunner){\n\n        if(isValidConfig(toolconfig)){\n\n            require([toolconfig.hook], function(hook){\n\n\t\t\t\tvar order = _.parseInt(toolconfig.order);\n\t\t        if(_.isNaN(order)){\n\t\t            order = 0;\n\t\t        }\n                var tplData = {\n                    id : id,\n                    navigation : false,\n                    title : toolconfig.title || toolconfig.label,\n                    label : toolconfig.label,\n                    icon : toolconfig.icon || '',\n\t\t\t\t\torder : order\n                };\n                var $button = $(buttonTpl(tplData));\n                if(isValidHook(hook)){\n\n                    //if an instance of the tool is already attached, remove it:\n                    var $existingBtn = $toolsContainer.children('[data-control=\"'+id+'\"]');\n                    if($existingBtn.length){\n                        hook.clear($button, toolconfig, assessmentTestContext);\n                        $existingBtn.remove();\n                    }\n\n                    //check if the tool is to be available\n                    if(hook.isVisible(toolconfig, assessmentTestContext)){\n\n                        //init the control\n                        hook.init($button, toolconfig, assessmentTestContext, testRunner);\n\n                        //only attach the button to the dom when everything is ready\n                        _appendInOrder($toolsContainer, $button);\n\n                        //ready !\n                        $button.trigger('ready' + _ns);\n                    }\n\n                }else{\n                    errorHandler.throw(_ns, 'invalid hook format');\n                }\n            }, function(e){\n                errorHandler.throw(_ns, 'the hook amd module cannot be found');\n            });\n\n        }else{\n            errorHandler.throw(_ns, 'invalid tool config format');\n        }\n\n    }\n\n\t/**\n     * Append a dom element $button to a $container in a specific order\n     * The orders are provided by data-order attribute set to the $button\n     *\n     * @param {JQuery} $container\n     * @param {JQuery} $button\n     */\n    function _appendInOrder($container, $button){\n\n        var $after, $before;\n        var order = parseInt($button.data('order'), 10);\n\n        if(order){\n\n            $container.children('.action').each(function(){\n\n                var $btn = $(this),\n                    _order = parseInt($btn.data('order'), 10);\n\n                if(_order === order){\n                    $after = $btn;\n                    return false;//stops\n                }else if(_order > order){\n                    $before = $btn;\n                    $after = null;\n                }else if(_order < order){\n                    $after = $btn;\n                    $before = null;\n                }\n            });\n\n            if($after){\n                $after.after($button);\n            }else if($before){\n                $before.before($button);\n            }else{\n                $container.append($button);\n            }\n\n        }else{\n            //unordered buttons are append at the end (including when order equals 0)\n            $container.append($button);\n        }\n    }\n\n    /**\n     * Check if the hook object is valid\n     *\n     * @param {Object} hook\n     * @param {Function} hook.init\n     * @param {Function} hook.clear\n     * @param {Function} hook.isVisible\n     * @returns {Boolean}\n     */\n    function isValidHook(hook){\n        return (_.isObject(hook) && _.isFunction(hook.init) && _.isFunction(hook.clear) && _.isFunction(hook.isVisible));\n    }\n\n    return {\n        isValid : isValidConfig,\n        initQtiTool : initQtiTool\n    };\n});\n\n","\ndefine('tpl!taoQtiTest/testRunner/tpl/navigator', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"        <aside class=\\\"test-sidebar test-sidebar-\";\n  if (helper = helpers.region) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.region); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \" flex-container-navi qti-navigator\\\">\\n            <div class=\\\"qti-navigator-collapsible\\\">\\n                <span class=\\\"qti-navigator-collapse icon icon-left\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Collapse the review panel\", options) : helperMissing.call(depth0, \"__\", \"Collapse the review panel\", options)))\n    + \"\\\"></span>\\n                <span class=\\\"qti-navigator-expand icon icon-right\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Expand the review panel\", options) : helperMissing.call(depth0, \"__\", \"Expand the review panel\", options)))\n    + \"\\\"></span>\\n            </div>\\n\\n            <div class=\\\"qti-navigator-info collapsible\\\">\\n                <span class=\\\"qti-navigator-label\\\">\\n                    <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Test status\", options) : helperMissing.call(depth0, \"__\", \"Test status\", options)))\n    + \"</span>\\n                    <span class=\\\"icon-up\\\"></span>\\n                    <span class=\\\"icon-down\\\"></span>\\n                </span>\\n                <ul class=\\\"collapsible-panel plain\\\">\\n                    <li class=\\\"qti-navigator-viewed\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Viewed items\", options) : helperMissing.call(depth0, \"__\", \"Viewed items\", options)))\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-viewed\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Viewed\", options) : helperMissing.call(depth0, \"__\", \"Viewed\", options)))\n    + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n                    </li>\\n                    <li class=\\\"qti-navigator-answered\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Completed items\", options) : helperMissing.call(depth0, \"__\", \"Completed items\", options)))\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-answered\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Answered\", options) : helperMissing.call(depth0, \"__\", \"Answered\", options)))\n    + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n                    </li>\\n                    <li class=\\\"qti-navigator-unanswered\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Unanswered items\", options) : helperMissing.call(depth0, \"__\", \"Unanswered items\", options)))\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-unanswered\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Unanswered\", options) : helperMissing.call(depth0, \"__\", \"Unanswered\", options)))\n    + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n                    </li>\\n                    <li class=\\\"qti-navigator-flagged\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Items marked for later review\", options) : helperMissing.call(depth0, \"__\", \"Items marked for later review\", options)))\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-flagged\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Flagged\", options) : helperMissing.call(depth0, \"__\", \"Flagged\", options)))\n    + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n                    </li>\\n                </ul>\\n            </div>\\n\\n            <div class=\\\"qti-navigator-filters\\\">\\n                <ul class=\\\"plain clearfix\\\">\\n                    <li class=\\\"qti-navigator-filter active\\\" data-mode=\\\"all\\\">\\n                        <span title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Reset filters\", options) : helperMissing.call(depth0, \"__\", \"Reset filters\", options)))\n    + \"\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"All\", options) : helperMissing.call(depth0, \"__\", \"All\", options)))\n    + \"</span>\\n                    </li>\\n                    <li class=\\\"qti-navigator-filter\\\" data-mode=\\\"unanswered\\\">\\n                        <span class=\\\"icon-unanswered\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Only display the unanswered items\", options) : helperMissing.call(depth0, \"__\", \"Only display the unanswered items\", options)))\n    + \"\\\"></span>\\n                    </li>\\n                    <li class=\\\"qti-navigator-filter\\\" data-mode=\\\"flagged\\\">\\n                        <span class=\\\"icon-flagged\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Only display the items marked for review\", options) : helperMissing.call(depth0, \"__\", \"Only display the items marked for review\", options)))\n    + \"\\\"></span>\\n                    </li>\\n                </ul>\\n            </div>\\n\\n            <nav class=\\\"qti-navigator-tree\\\">\\n            </nav>\\n\\n            <div id=\\\"qti-navigator-linear\\\" class=\\\"qti-navigator-linear\\\">\\n                <span class=\\\"icon icon-info\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\\"></span>\\n                <p class=\\\"qti-navigator-message\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\n                </p>\\n            </div>\\n        </aside>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/testRunner/tpl/navigatorTree', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, self=this, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                    <li class=\\\"qti-navigator-part collapsible \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                            <span class=\\\"qti-navigator-text\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n                            <span class=\\\"icon-up\\\"></span>\\n                            <span class=\\\"icon-down\\\"></span>\\n                        </span>\\n                        \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.sections)),stack1 == null || stack1 === false ? stack1 : stack1.length), {hash:{},inverse:self.program(29, program29, data),fn:self.program(6, program6, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                    </li>\\n                    \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \"active\";\n  }\n\nfunction program4(depth0,data) {\n  \n  \n  return \"collapsed\";\n  }\n\nfunction program6(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n                        <ul class=\\\"qti-navigator-sections collapsible-panel plain\\\">\\n                            \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.sections), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                        </ul>\\n                        \";\n  return buffer;\n  }\nfunction program7(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                            <li class=\\\"qti-navigator-section collapsible \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                                <span class=\\\"qti-navigator-label\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                                    <span class=\\\"qti-navigator-text\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n                                    <span class=\\\"qti-navigator-counter\\\">\";\n  if (helper = helpers.answered) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.answered); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"/\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.items)),stack1 == null || stack1 === false ? stack1 : stack1.length)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</span>\\n                                </span>\\n                                <ul class=\\\"qti-navigator-items collapsible-panel plain\\\">\\n                                    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.items), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                                </ul>\\n                            </li>\\n                            \";\n  return buffer;\n  }\nfunction program8(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                                    <li class=\\\"qti-navigator-item\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.flagged), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.answered), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.viewed), {hash:{},inverse:self.program(17, program17, data),fn:self.program(15, program15, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-position=\\\"\";\n  if (helper = helpers.position) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.position); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                                        <span class=\\\"qti-navigator-label truncate\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                                            <span class=\\\"qti-navigator-icon icon-\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.flagged), {hash:{},inverse:self.program(21, program21, data),fn:self.program(19, program19, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"></span>\\n                                            \";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\n                                        </span>\\n                                    </li>\\n                                    \";\n  return buffer;\n  }\nfunction program9(depth0,data) {\n  \n  \n  return \" active\";\n  }\n\nfunction program11(depth0,data) {\n  \n  \n  return \" flagged\";\n  }\n\nfunction program13(depth0,data) {\n  \n  \n  return \" answered\";\n  }\n\nfunction program15(depth0,data) {\n  \n  \n  return \" viewed\";\n  }\n\nfunction program17(depth0,data) {\n  \n  \n  return \" unseen\";\n  }\n\nfunction program19(depth0,data) {\n  \n  \n  return \"flagged\";\n  }\n\nfunction program21(depth0,data) {\n  \n  var stack1;\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.answered), {hash:{},inverse:self.program(24, program24, data),fn:self.program(22, program22, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program22(depth0,data) {\n  \n  \n  return \"answered\";\n  }\n\nfunction program24(depth0,data) {\n  \n  var stack1;\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.viewed), {hash:{},inverse:self.program(27, program27, data),fn:self.program(25, program25, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program25(depth0,data) {\n  \n  \n  return \"viewed\";\n  }\n\nfunction program27(depth0,data) {\n  \n  \n  return \"unseen\";\n  }\n\nfunction program29(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n                        <div class=\\\"qti-navigator-linear-part collapsible-panel\\\">\\n                            <span class=\\\"icon icon-info\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\\"></span>\\n                            <p class=\\\"qti-navigator-message\\\">\\n                                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\n                            </p>\\n                            <p class=\\\"qti-navigator-actions\\\">\\n                                <button class=\\\"btn-info small\\\" data-id=\\\"\";\n  if (helper = helpers.itemId) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.itemId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-position=\\\"\";\n  if (helper = helpers.position) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.position); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Start Test-part\", options) : helperMissing.call(depth0, \"__\", \"Start Test-part\", options)))\n    + \"\\\">\\n                                    <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Start Test-part\", options) : helperMissing.call(depth0, \"__\", \"Start Test-part\", options)))\n    + \"</span>\\n                                    <span class=\\\"icon-play r\\\"></span>\\n                                </button>\\n                            </p>\\n                        </div>\\n                        \";\n  return buffer;\n  }\n\n  buffer += \"                <ul class=\\\"qti-navigator-parts plain\\\">\\n                    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.parts), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                </ul>\\n\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/testRunner/testReview',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'tpl!taoQtiTest/testRunner/tpl/navigator',\n    'tpl!taoQtiTest/testRunner/tpl/navigatorTree',\n    'util/capitalize'\n], function ($, _, __, navigatorTpl, navigatorTreeTpl, capitalize) {\n    'use strict';\n\n    /**\n     * List of CSS classes\n     * @type {Object}\n     * @private\n     */\n    var _cssCls = {\n        active : 'active',\n        collapsed : 'collapsed',\n        collapsible : 'collapsible',\n        masked : 'masked',\n        disabled : 'disabled',\n        flagged : 'flagged',\n        answered : 'answered',\n        viewed : 'viewed',\n        unseen : 'unseen',\n        icon : 'qti-navigator-icon',\n        scope : {\n            test : 'scope-test',\n            testPart : 'scope-test-part',\n            testSection : 'scope-test-section'\n        }\n    };\n\n    /**\n     * List of common CSS selectors\n     * @type {Object}\n     * @private\n     */\n    var _selectors = {\n        component : '.qti-navigator',\n        filterBar : '.qti-navigator-filters',\n        tree : '.qti-navigator-tree',\n        collapseHandle : '.qti-navigator-collapsible',\n        linearState : '.qti-navigator-linear',\n        infoAnswered : '.qti-navigator-answered .qti-navigator-counter',\n        infoViewed : '.qti-navigator-viewed .qti-navigator-counter',\n        infoUnanswered : '.qti-navigator-unanswered .qti-navigator-counter',\n        infoFlagged : '.qti-navigator-flagged .qti-navigator-counter',\n        infoPanel : '.qti-navigator-info',\n        infoPanelLabels : '.qti-navigator-info > .qti-navigator-label',\n        parts : '.qti-navigator-part',\n        partLabels : '.qti-navigator-part > .qti-navigator-label',\n        sections : '.qti-navigator-section',\n        sectionLabels : '.qti-navigator-section > .qti-navigator-label',\n        items : '.qti-navigator-item',\n        itemLabels : '.qti-navigator-item > .qti-navigator-label',\n        itemIcons : '.qti-navigator-item > .qti-navigator-icon',\n        icons : '.qti-navigator-icon',\n        linearStart : '.qti-navigator-linear-part button',\n        counters : '.qti-navigator-counter',\n        actives : '.active',\n        collapsible : '.collapsible',\n        collapsiblePanels : '.collapsible-panel',\n        unseen : '.unseen',\n        answered : '.answered',\n        notFlagged : ':not(.flagged)',\n        notAnswered : ':not(.answered)',\n        masked : '.masked'\n    };\n\n    /**\n     * Maps the filter mode to filter criteria.\n     * Each filter criteria is a CSS selector used to find and mask the items to be discarded by the filter.\n     * @type {Object}\n     * @private\n     */\n    var _filterMap = {\n        all : \"\",\n        unanswered : _selectors.answered,\n        flagged : _selectors.notFlagged,\n        answered : _selectors.notAnswered,\n        filtered : _selectors.masked\n    };\n\n    /**\n     * Maps of config options translated from the context object to the local options\n     * @type {Object}\n     * @private\n     */\n    var _optionsMap = {\n        'reviewScope' : 'reviewScope',\n        'reviewPreventsUnseen' : 'preventsUnseen',\n        'canCollapse' : 'canCollapse'\n    };\n\n    /**\n     * Maps the handled review scopes\n     * @type {Object}\n     * @private\n     */\n    var _reviewScopes = {\n        test : 'test',\n        testPart : 'testPart',\n        testSection : 'testSection'\n    };\n\n    /**\n     * Provides a test review manager\n     * @type {{init: Function, update: Function, enable: Function, disable: Function, hide: Function, show: Function, toggle: Function, on: Function, off: Function, trigger: Function}}\n     */\n    var testReview = {\n        /**\n         * Initializes the component\n         * @param {String|jQuery|HTMLElement} element The element on which install the component\n         * @param {Object} [options] A list of extra options\n         * @param {String} [options.region] The region on which put the component: left or right\n         * @param {Boolean} [options.reviewScope] Limit the review screen to a particular scope:\n         * the whole test, the current test part or the current test section)\n         * @param {Boolean} [options.preventsUnseen] Prevents the test taker to access unseen items\n         * @returns {testReview}\n         */\n        init: function init(element, options) {\n            var initOptions = _.isObject(options) && options || {};\n            var putOnRight = 'right' === initOptions.region;\n            var insertMethod = putOnRight ? 'append' : 'prepend';\n\n            this.options = initOptions;\n            this.disabled = false;\n            this.hidden = false;\n\n            // clean the DOM if the init method is called after initialisation\n            if (this.$component) {\n                this.$component.remove();\n            }\n\n            // build the component structure and inject it into the DOM\n            this.$container = $(element);\n            insertMethod = this.$container[insertMethod];\n            if (insertMethod) {\n                insertMethod.call(this.$container, navigatorTpl({\n                    region: putOnRight ? 'right' : 'left'\n                }));\n            } else {\n                throw new Error(\"Unable to inject the component structure into the DOM\");\n            }\n\n            // install the component behaviour\n            this._loadDOM();\n            this._initEvents();\n            this._updateDisplayOptions();\n\n            return this;\n        },\n\n        /**\n         * Links the component to the underlying DOM elements\n         * @private\n         */\n        _loadDOM: function() {\n            this.$component = this.$container.find(_selectors.component);\n\n            // access to info panel displaying counters\n            this.$infoAnswered = this.$component.find(_selectors.infoAnswered);\n            this.$infoViewed = this.$component.find(_selectors.infoViewed);\n            this.$infoUnanswered = this.$component.find(_selectors.infoUnanswered);\n            this.$infoFlagged = this.$component.find(_selectors.infoFlagged);\n\n            // access to filter switches\n            this.$filterBar = this.$component.find(_selectors.filterBar);\n            this.$filters = this.$filterBar.find('li');\n\n            // access to the tree of parts/sections/items\n            this.$tree = this.$component.find(_selectors.tree);\n\n            // access to the panel displayed when a linear part is reached\n            this.$linearState = this.$component.find(_selectors.linearState);\n        },\n\n        /**\n         * Installs the event handlers on the underlying DOM elements\n         * @private\n         */\n        _initEvents: function() {\n            var self = this;\n\n            // click on the collapse handle: collapse/expand the review panel\n            this.$component.on('click' + _selectors.component, _selectors.collapseHandle, function() {\n                if (self.disabled) {\n                    return;\n                }\n\n                self.$component.toggleClass(_cssCls.collapsed);\n                if (self.$component.hasClass(_cssCls.collapsed)) {\n                    self._openSelected();\n                }\n            });\n\n            // click on the info panel title: toggle the related panel\n            this.$component.on('click' + _selectors.component, _selectors.infoPanelLabels, function() {\n                if (self.disabled) {\n                    return;\n                }\n\n                var $panel = $(this).closest(_selectors.infoPanel);\n                self._togglePanel($panel, _selectors.infoPanel);\n            });\n\n            // click on a part title: toggle the related panel\n            this.$tree.on('click' + _selectors.component, _selectors.partLabels, function() {\n                if (self.disabled) {\n                    return;\n                }\n\n                var $panel = $(this).closest(_selectors.parts);\n                var open = self._togglePanel($panel, _selectors.parts);\n\n                if (open) {\n                    if ($panel.hasClass(_cssCls.active)) {\n                        self._openSelected();\n                    } else {\n                        self._openOnly($panel.find(_selectors.sections).first(), $panel);\n                    }\n                }\n            });\n\n            // click on a section title: toggle the related panel\n            this.$tree.on('click' + _selectors.component, _selectors.sectionLabels, function() {\n                if (self.disabled) {\n                    return;\n                }\n\n                var $panel = $(this).closest(_selectors.sections);\n\n                self._togglePanel($panel, _selectors.sections);\n            });\n\n            // click on an item: jump to the position\n            this.$tree.on('click' + _selectors.component, _selectors.itemLabels, function(event) {\n                if (self.disabled) {\n                    return;\n                }\n\n                var $item = $(this).closest(_selectors.items);\n                var $target;\n\n                if (!$item.hasClass(_cssCls.disabled)) {\n                    $target = $(event.target);\n                    if ($target.is(_selectors.icons) && !self.$component.hasClass(_cssCls.collapsed)) {\n                        if (!$item.hasClass(_cssCls.unseen)) {\n                            self._mark($item);\n                        }\n                    } else {\n                        self._select($item);\n                        self._jump($item);\n                    }\n                }\n            });\n\n            // click on the start button inside a linear part: jump to the position\n            this.$tree.on('click' + _selectors.component, _selectors.linearStart, function() {\n                if (self.disabled) {\n                    return;\n                }\n\n                var $btn = $(this);\n\n                if (!$btn.hasClass(_cssCls.disabled)) {\n                    $btn.addClass(_cssCls.disabled);\n                    self._jump($btn);\n                }\n            });\n\n            // click on a filter button\n            this.$filterBar.on('click' + _selectors.component, 'li', function() {\n                if (self.disabled) {\n                    return;\n                }\n\n                var $btn = $(this);\n                var mode = $btn.data('mode');\n\n                self.$filters.removeClass(_cssCls.active);\n                self.$component.removeClass(_cssCls.collapsed);\n                $btn.addClass(_cssCls.active);\n\n                self._filter(mode);\n            });\n        },\n\n        /**\n         * Filters the items by a criteria\n         * @param {String} criteria\n         * @private\n         */\n        _filter: function(criteria) {\n            var $items = this.$tree.find(_selectors.items).removeClass(_cssCls.masked);\n            var filter = _filterMap[criteria];\n            if (filter) {\n                $items.filter(filter).addClass(_cssCls.masked);\n            }\n            this._updateSectionCounters(!!filter);\n        },\n\n        /**\n         * Selects an item\n         * @param {String|jQuery} position The item's position\n         * @param {Boolean} [open] Forces the tree to be opened on the selected item\n         * @returns {jQuery} Returns the selected item\n         * @private\n         */\n        _select: function(position, open) {\n            // find the item to select and extract its hierarchy\n            var selected = position && position.jquery ? position : this.$tree.find('[data-position=' + position + ']');\n            var hierarchy = selected.parentsUntil(this.$tree);\n\n            // collapse the full tree and open only the hierarchy of the selected item\n            if (open) {\n                this._openOnly(hierarchy);\n            }\n\n            // select the item\n            this.$tree.find(_selectors.actives).removeClass(_cssCls.active);\n            hierarchy.add(selected).addClass(_cssCls.active);\n            return selected;\n        },\n\n        /**\n         * Opens the tree on the selected item only\n         * @returns {jQuery} Returns the selected item\n         * @private\n         */\n        _openSelected: function() {\n            // find the selected item and extract its hierarchy\n            var selected = this.$tree.find(_selectors.items + _selectors.actives);\n            var hierarchy = selected.parentsUntil(this.$tree);\n\n            // collapse the full tree and open only the hierarchy of the selected item\n            this._openOnly(hierarchy);\n\n            return selected;\n        },\n\n        /**\n         * Collapses the full tree and opens only the provided branch\n         * @param {jQuery} opened The element to be opened\n         * @param {jQuery} [root] The root element from which collapse the panels\n         * @private\n         */\n        _openOnly: function(opened, root) {\n            (root || this.$tree).find(_selectors.collapsible).addClass(_cssCls.collapsed);\n            opened.removeClass(_cssCls.collapsed);\n        },\n\n        /**\n         * Toggles a panel\n         * @param {jQuery} panel The panel to toggle\n         * @param {String} [collapseSelector] Selector of panels to collapse\n         * @returns {Boolean} Returns `true` if the panel just expanded now\n         */\n        _togglePanel: function(panel, collapseSelector) {\n            var collapsed = panel.hasClass(_cssCls.collapsed);\n\n            if (collapseSelector) {\n                this.$tree.find(collapseSelector).addClass(_cssCls.collapsed);\n            }\n\n            if (collapsed) {\n                panel.removeClass(_cssCls.collapsed);\n            } else {\n                panel.addClass(_cssCls.collapsed);\n            }\n            return collapsed;\n        },\n\n        /**\n         * Sets the icon of a particular item\n         * @param {jQuery} $item\n         * @param {String} icon\n         * @private\n         */\n        _setItemIcon: function($item, icon) {\n            $item.find(_selectors.icons).attr('class', _cssCls.icon + ' icon-' + icon);\n        },\n\n        /**\n         * Sets the icon of a particular item according to its state\n         * @param {jQuery} $item\n         * @private\n         */\n        _adjustItemIcon: function($item) {\n            var icon = null;\n            var defaultIcon = _cssCls.unseen;\n            var iconCls = [\n                _cssCls.flagged,\n                _cssCls.answered,\n                _cssCls.viewed\n            ];\n\n            _.forEach(iconCls, function(cls) {\n                if ($item.hasClass(cls)) {\n                    icon = cls;\n                    return false;\n                }\n            });\n\n            this._setItemIcon($item, icon || defaultIcon);\n        },\n\n        /**\n         * Marks an item for later review\n         * @param {jQuery} $item\n         * @private\n         */\n        _mark: function($item) {\n            var itemId = $item.data('id');\n            var itemPosition = $item.data('position');\n            var flag = !$item.hasClass(_cssCls.flagged);\n\n            $item.toggleClass(_cssCls.flagged);\n            this._adjustItemIcon($item);\n\n            /**\n             * A storage of the flag is required\n             * @event testReview#mark\n             * @param {Boolean} flag - Tells whether the item is marked for review or not\n             * @param {Number} position - The item position on which jump\n             * @param {String} itemId - The identifier of the target item\n             * @param {testReview} testReview - The client testReview component\n             */\n            this.trigger('mark', [flag, itemPosition, itemId]);\n        },\n\n        /**\n         * Jumps to an item\n         * @param {jQuery} $item\n         * @private\n         */\n        _jump: function($item) {\n            var itemId = $item.data('id');\n            var itemPosition = $item.data('position');\n\n            /**\n             * A jump to a particular item is required\n             * @event testReview#jump\n             * @param {Number} position - The item position on which jump\n             * @param {String} itemId - The identifier of the target item\n             * @param {testReview} testReview - The client testReview component\n             */\n            this.trigger('jump', [itemPosition, itemId]);\n        },\n\n        /**\n         * Updates the sections related items counters\n         * @param {Boolean} filtered\n         */\n        _updateSectionCounters: function(filtered) {\n            var filter = _filterMap[filtered ? 'filtered' : 'answered'];\n            this.$tree.find(_selectors.sections).each(function() {\n                var $section = $(this);\n                var $items = $section.find(_selectors.items);\n                var $filtered = $items.filter(filter);\n                var total = $items.length;\n                var nb = total - $filtered.length;\n                $section.find(_selectors.counters).html(nb + '/' + total);\n            });\n        },\n\n        /**\n         * Updates the display according to options\n         * @private\n         */\n        _updateDisplayOptions: function() {\n            var reviewScope = _reviewScopes[this.options.reviewScope] || 'test';\n            var scopeClass = _cssCls.scope[reviewScope];\n            var $root = this.$component;\n            _.forEach(_cssCls.scope, function(cls) {\n                $root.removeClass(cls);\n            });\n            if (scopeClass) {\n                $root.addClass(scopeClass);\n            }\n            $root.toggleClass(_cssCls.collapsible, this.options.canCollapse);\n        },\n\n        /**\n         * Updates the local options from the provided context\n         * @param {Object} testContext The progression context\n         * @private\n         */\n        _updateOptions: function(testContext) {\n            var options = this.options;\n            _.forEach(_optionsMap, function(optionKey, contextKey) {\n                if (undefined !== testContext[contextKey]) {\n                    options[optionKey] = testContext[contextKey];\n                }\n            });\n        },\n\n        /**\n         * Updates the info panel\n         * @param {Object} testContext The progression context\n         */\n        _updateInfos: function(testContext) {\n            var progression = this.getProgression(testContext),\n                unanswered = Number(progression.total) - Number(progression.answered);\n\n            // update the info panel\n            this.$infoAnswered.text(progression.answered + '/' + progression.total);\n            this.$infoUnanswered.text(unanswered + '/' + progression.total);\n            this.$infoViewed.text(progression.viewed + '/' + progression.total);\n            this.$infoFlagged.text(progression.flagged + '/' + progression.total);\n        },\n\n        /**\n         * Gets the progression stats for the whole test\n         * @param {Object} testContext The progression context\n         * @returns {{total: (Number), answered: (Number), viewed: (Number), flagged: (Number)}}\n         * @private\n         */\n        _getProgressionOfTest: function(testContext) {\n            return {\n                total : testContext.numberItems || 0,\n                answered : testContext.numberCompleted || 0,\n                viewed : testContext.numberPresented || 0,\n                flagged : testContext.numberFlagged || 0\n            };\n        },\n\n        /**\n         * Gets the progression stats for the current test part\n         * @param {Object} testContext The progression context\n         * @returns {{total: (Number), answered: (Number), viewed: (Number), flagged: (Number)}}\n         * @private\n         */\n        _getProgressionOfTestPart: function(testContext) {\n            return {\n                total : testContext.numberItemsPart || 0,\n                answered : testContext.numberCompletedPart || 0,\n                viewed : testContext.numberPresentedPart || 0,\n                flagged : testContext.numberFlaggedPart || 0\n            };\n        },\n\n        /**\n         * Gets the progression stats for the current test section\n         * @param {Object} testContext The progression context\n         * @returns {{total: (Number), answered: (Number), viewed: (Number), flagged: (Number)}}\n         * @private\n         */\n        _getProgressionOfTestSection: function(testContext) {\n            return {\n                total : testContext.numberItemsSection || 0,\n                answered : testContext.numberCompletedSection || 0,\n                viewed : testContext.numberPresentedSection || 0,\n                flagged : testContext.numberFlaggedSection || 0\n            };\n        },\n\n        /**\n         * Updates the navigation tre\n         * @param {Object} testContext The progression context\n         */\n        _updateTree: function(testContext) {\n            var navigatorMap = testContext.navigatorMap;\n            var reviewScope = this.options.reviewScope;\n            var reviewScopePart = reviewScope === 'testPart';\n            var reviewScopeSection = reviewScope === 'testSection';\n            var _partsFilter = function(part) {\n                if (reviewScopeSection && part.sections) {\n                    part.sections = _.filter(part.sections, _partsFilter);\n                }\n                return part.active;\n            };\n\n            // rebuild the tree\n            if (navigatorMap) {\n                if (reviewScopePart || reviewScopeSection) {\n                    // display only the current section\n                    navigatorMap = _.filter(navigatorMap, _partsFilter);\n                }\n\n                this.$filterBar.show();\n                this.$linearState.hide();\n                this.$tree.html(navigatorTreeTpl({\n                    parts: navigatorMap\n                }));\n\n                if (this.options.preventsUnseen) {\n                    // disables all unseen items to prevent the test taker has access to.\n                    this.$tree.find(_selectors.unseen).addClass(_cssCls.disabled);\n                }\n            } else {\n                this.$filterBar.hide();\n                this.$linearState.show();\n                this.$tree.empty();\n            }\n\n            // apply again the current filter\n            this._filter(this.$filters.filter(_selectors.actives).data('mode'));\n        },\n        \n        /**\n         * Get progression\n         * @param {Object} testContext The progression context\n         * @returns {object} progression\n         */\n        getProgression: function getProgression(testContext) {\n            var reviewScope = _reviewScopes[this.options.reviewScope] || 'test',\n                progressInfoMethod = '_getProgressionOf' + capitalize(reviewScope),\n                getProgression = this[progressInfoMethod] || this._getProgressionOfTest,\n                progression = getProgression && getProgression(testContext) || {};\n            \n            return progression;\n        },\n        \n        /**\n         * Updates the review screen\n         * @param {Object} testContext The progression context\n         * @returns {testReview}\n         */\n        update: function update(testContext) {\n            this._updateOptions(testContext);\n            this._updateInfos(testContext);\n            this._updateTree(testContext);\n            this._updateDisplayOptions();\n            return this;\n        },\n\n        /**\n         * Disables the component\n         * @returns {testReview}\n         */\n        disable: function disable() {\n            this.disabled = true;\n            this.$component.addClass(_cssCls.disabled);\n            return this;\n        },\n\n        /**\n         * Enables the component\n         * @returns {testReview}\n         */\n        enable: function enable() {\n            this.disabled = false;\n            this.$component.removeClass(_cssCls.disabled);\n            return this;\n        },\n\n        /**\n         * Hides the component\n         * @returns {testReview}\n         */\n        hide: function hide() {\n            this.disabled = true;\n            this.hidden = true;\n            this.$component.addClass(_cssCls.masked);\n            return this;\n        },\n\n        /**\n         * Shows the component\n         * @returns {testReview}\n         */\n        show: function show() {\n            this.disabled = false;\n            this.hidden = false;\n            this.$component.removeClass(_cssCls.masked);\n            return this;\n        },\n\n        /**\n         * Toggles the display state of the component\n         * @param {Boolean} [show] External condition that's tells if the component must be shown or hidden\n         * @returns {testReview}\n         */\n        toggle: function toggle(show) {\n            if (undefined === show) {\n                show = this.hidden;\n            }\n\n            if (show) {\n                this.show();\n            } else {\n                this.hide();\n            }\n\n            return this;\n        },\n\n        /**\n         * Install an event handler on the underlying DOM element\n         * @param {String} eventName\n         * @returns {testReview}\n         */\n        on: function on(eventName) {\n            var dom = this.$component;\n            if (dom) {\n                dom.on.apply(dom, arguments);\n            }\n\n            return this;\n        },\n\n        /**\n         * Uninstall an event handler from the underlying DOM element\n         * @param {String} eventName\n         * @returns {testReview}\n         */\n        off: function off(eventName) {\n            var dom = this.$component;\n            if (dom) {\n                dom.off.apply(dom, arguments);\n            }\n\n            return this;\n        },\n\n        /**\n         * Triggers an event on the underlying DOM element\n         * @param {String} eventName\n         * @param {Array|Object} extraParameters\n         * @returns {testReview}\n         */\n        trigger : function trigger(eventName, extraParameters) {\n            var dom = this.$component;\n\n            if (undefined === extraParameters) {\n                extraParameters = [];\n            }\n            if (!_.isArray(extraParameters)) {\n                extraParameters = [extraParameters];\n            }\n\n            extraParameters.push(this);\n\n            if (dom) {\n                dom.trigger(eventName, extraParameters);\n            }\n\n            return this;\n        }\n    };\n\n    /**\n     * Builds an instance of testReview\n     * @param {String|jQuery|HTMLElement} element The element on which install the component\n     * @param {Object} [options] A list of extra options\n     * @param {String} [options.region] The region on which put the component: left or right\n     * @param {Boolean} [options.reviewScope] Limit the review screen to a particular scope:\n     * the whole test, the current test part or the current test section)\n     * @param {Boolean} [options.preventsUnseen] Prevents the test taker to access unseen items\n     * @returns {testReview}\n     */\n    var testReviewFactory = function(element, options) {\n        var component = _.clone(testReview, true);\n        return component.init(element, options);\n    };\n\n    return testReviewFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/testRunner/progressUpdater',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/progressbar'\n], function ($, _, __) {\n    'use strict';\n\n    /**\n     * Provides a versatile progress bar updater\n     * @type {{init: Function, update: Function}}\n     */\n    var progressUpdaters = {\n        /**\n         * Initializes the progress updater\n         *\n         * @param {String|jQuery|HTMLElement} progressBar The element on which put the progress bar\n         * @param {String|jQuery|HTMLElement} progressLabel The element on which put the progress label\n         * @returns {progressUpdaters}\n         */\n        init: function(progressBar, progressLabel) {\n            this.progressBar = $(progressBar).progressbar();\n            this.progressLabel = $(progressLabel);\n            return this;\n        },\n\n        /**\n         * Writes the progress label and update the progress by ratio\n         * @param {String} label\n         * @param {Number} ratio\n         * @returns {progressUpdaters}\n         */\n        write: function(label, ratio) {\n            this.progressLabel.text(label);\n            this.progressBar.progressbar('value', ratio);\n            return this;\n        },\n\n        /**\n         * Updates the progress bar\n         * @param {Object} testContext The progression context\n         * @returns {{ratio: number, label: string}}\n         */\n        update: function(testContext) {\n            var progressIndicator = testContext.progressIndicator || 'percentage';\n            var progressIndicatorMethod = progressIndicator + 'Progression';\n            var getProgression = this[progressIndicatorMethod] || this.percentageProgression;\n            var progression = getProgression && getProgression(testContext) || {};\n\n            this.write(progression.label, progression.ratio);\n            return progression;\n        },\n\n        /**\n         * Updates the progress bar displaying the percentage\n         * @param {Object} testContext The progression context\n         * @returns {{ratio: number, label: string}}\n         */\n        percentageProgression: function(testContext) {\n            var total = Math.max(1, testContext.numberItems);\n            var ratio = Math.floor(testContext.numberCompleted / total * 100);\n            return {\n                ratio : ratio,\n                label : ratio + '%'\n            };\n        },\n\n        /**\n         * Updates the progress bar displaying the position\n         * @param {Object} testContext The progression context\n         * @returns {{ratio: number, label: string}}\n         */\n        positionProgression: function(testContext) {\n            var progressScope = testContext.progressIndicatorScope;\n            var progressScopeCounter = {\n                test : {\n                    total : 'numberItems',\n                    position : 'itemPosition'\n                },\n                testPart : {\n                    total : 'numberItemsPart',\n                    position : 'itemPositionPart'\n                },\n                testSection : {\n                    total : 'numberItemsSection',\n                    position : 'itemPositionSection'\n                }\n            };\n            var counter = progressScopeCounter[progressScope] || progressScopeCounter.test;\n            var total = Math.max(1, testContext[counter.total]);\n            var position = testContext[counter.position] + 1;\n            return {\n                ratio : Math.floor(position / total * 100),\n                label : __('Item %d of %d', position, total)\n            };\n        }\n    };\n\n    /**\n     * Builds an instance of progressUpdaters\n     * @param {String|jQuery|HTMLElement} progressBar The element on which put the progress bar\n     * @param {String|jQuery|HTMLElement} progressLabel The element on which put the progress label\n     * @returns {progressUpdaters}\n     */\n    var progressUpdaterFactory = function(progressBar, progressLabel) {\n        var updater = _.clone(progressUpdaters, true);\n        return updater.init(progressBar, progressLabel);\n    };\n\n    return progressUpdaterFactory;\n});\n\n","define('serviceApi/ServiceApi',['jquery', 'urlParser', 'iframeResizer'], function($, UrlParser, iframeResizer){\n    \n    function ServiceApi(baseUrl, parameters, serviceCallId, stateStorage, userService){\n        this.baseUrl = baseUrl;\n        this.parameters = parameters;\n        this.connected = false;\n\n        this.serviceCallId = serviceCallId; \n        this.state = stateStorage;\n        this.userService = userService;\n\n        this.onFinishCallback;\n        this.onKillCallback;\n        this.onDisplayChangeCallback;\n    }\n\n    ServiceApi.SIG_SUCCESS = 0; \n    ServiceApi.SIG_ERROR = 1;\n        \n    ServiceApi.prototype.loadInto = function(frame, connected){\n        var self = this;\n        var $frame = $(frame);\n        var callUrl = this.getCallUrl();        \n        var isCORSAllowed = new UrlParser(callUrl).checkCORS();\n\n        $frame.on('load', function(e){\n             //if we are  in the same domain, we add a variable\n             //to the frame window, so the frame knows it can communicate\n             //with the parent\n            $(document).on('serviceready', function(){\n                self.connect(frame, function(){\n                    $(document).off('serviceready');\n                    if(typeof connected === 'function'){\n                        connected();\n                    }\n                });\n            });\n             if(isCORSAllowed === true){\n                 frame.contentWindow.__knownParent__ = true;\n             }\n         });\n\n        $frame.attr('src', callUrl);\n    };\n\n    ServiceApi.prototype.connect = function(frame, connected){\n        if(this.connected === false && frame.contentWindow){\n            //frame.contentWindow.serviceApi = this;\n            if (typeof(frame.contentWindow.onServiceApiReady) === \"function\") {\n                frame.contentWindow.onServiceApiReady(this);\n                this.connected = true;\n                if(typeof connected === 'function'){\n                    connected();\n                }\n            }\n        }\n    };\n    \n    /**\n     * Get the service call URL\n     * @returns {String} the URI\n     */\n    ServiceApi.prototype.getCallUrl = function(){\n        var params = this.parameters || {};\n        params.serviceCallId = this.serviceCallId;\n        return this.baseUrl + '?' + $.param(params);\n    };\n\n    ServiceApi.prototype.getUserPropertyValues = function(property, callback){\n    \tthis.userService.get(property, callback);\n    };\n    \n    //Context\n    ServiceApi.prototype.getServiceCallId = function(){\n        return this.serviceCallId;\n    };\n\n    //Context\n    ServiceApi.prototype.getState = function(){\n        return this.state.get();\n    };\n\n    ServiceApi.prototype.setState = function(state, callback){\n        return this.state.set(state, callback);\n    };\n\n    // Variables \n    ServiceApi.prototype.getParameter = function(identifier){\n        if (typeof(this.parameters[identifier]) !== \"undefined\") {\n            return this.parameters[identifier];\n        } else {\n            return null;\n        }\n    };\n\n    ServiceApi.prototype.onFinish = function(callback) {\n        this.onFinishCallback = callback;\t\n    };\n\n    ServiceApi.prototype.onKill = function(callback) {\n        this.onKillCallback = callback;\t\n    };\n    \n    ServiceApi.prototype.kill = function(callback) {\n    \tif (typeof this.onKillCallback == 'function') {\n    \t\tthis.onKillCallback(callback);\n    \t} else {\n    \t\tcallback(0);\n    \t}\n    };\n    \n    // Flow\n    // valueArray are return parameters of the service.\n    ServiceApi.prototype.finish = function(valueArray) {\n            //return execution to service caller\n            if (typeof this.onFinishCallback === 'function') {\n                    this.onFinishCallback(valueArray);\n            }\n    };\n\n    return ServiceApi;\n\n});\n\n","define('serviceApi/UserInfoService',['jquery'], function($){\n    \n    function UserInfoService(requestUrl, data) {\n        this.data = data;\n        this.requestUrl = requestUrl;\n    }\n\n    UserInfoService.prototype.get = function(property, callback){\n        if (this.data.hasOwnProperty(property)) {\n            if (typeof callback === \"function\") {\n                    callback(this.data[property]);\n            }\n        } else {\n            $.ajax({\n                url : this.requestUrl,\n                data \t\t: {\n                    'property' : property\n                },\n                type        : 'post',\n                dataType\t: 'json',\n                success     : (function(service, callback) {return function(r) {\n            \t\tfor (key in r.data) {\n            \t\t\tservice.data[key] = r.data[key];\n            \t\t}\n                    if (typeof callback === \"function\") {\n                        callback(service.data[property]);\n                    }\n\n                }})(this, callback)\n                /*\t\n            \tfunction(r){\n                    if(r.success){\n                    \tconsole.log(this.data);\n                    \tthis.data[property] = r.values;\n                    \t//console.log(this.data);\n\t                    if (typeof callback === \"function\") {\n\t                        callback(this.data[property]);\n\t                    }\n                    }\n                }\n                */\n                \n                \n            });\n        }\n    };\n\n    return UserInfoService;\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2013 (original work) Open Assessment Technologies SA ;\n */\ndefine('serviceApi/StateStorage',['jquery'], function($){\n    'use strict';\n    \n    function StateStorage(state, submitUrl) {\n        this.state = state;\n        this.submitUrl = submitUrl;\n    }\n\n    StateStorage.prototype.get = function(callback){\n        if (typeof callback === 'function') {\n                callback(this.state);\n        }\n        return this.state;\n    };\n\n    StateStorage.prototype.set = function(state, callback){\n\n        if (state === this.state) {\n            if (typeof callback === \"function\") {\n                    callback();\n            }\n        } else {\n            this.state = state;\n            $.ajax({\n                url : this.submitUrl,\n                data \t\t: {\n                    'state' : state\n                },\n                type        : 'post',\n                dataType\t: 'json',\n                success     : typeof callback === \"function\" ? callback : null\n            });\n        }\n    };\n\n    return StateStorage;\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n *\n */\n\ndefine('taoQtiTest/controller/runtime/testRunner',[\n    'jquery',\n    'lodash',\n    'module',\n    'taoQtiTest/testRunner/actionBarHook',\n    'taoQtiTest/testRunner/testReview',\n    'taoQtiTest/testRunner/progressUpdater',\n    'serviceApi/ServiceApi',\n    'serviceApi/UserInfoService',\n    'serviceApi/StateStorage',\n    'iframeResizer',\n    'iframeNotifier',\n    'i18n',\n    'mathJax',\n    'ui/feedback',\n    'ui/deleter',\n    'moment',\n    'ui/modal',\n    'ui/progressbar'\n], function ($, _, module, actionBarHook, testReview, progressUpdater, ServiceApi, UserInfoService, StateStorage, iframeResizer, iframeNotifier, __, MathJax, feedback, deleter, moment, modal) {\n\n    'use strict';\n\n    var timerIds = [],\n        currentTimes = [],\n        lastDates = [],\n        timeDiffs = [],\n        waitingTime = 0,\n        $timers,\n        $controls,\n        timerIndex,\n        $doc = $(document),\n        TestRunner = {\n            // Constants\n            'TEST_STATE_INITIAL': 0,\n            'TEST_STATE_INTERACTING': 1,\n            'TEST_STATE_MODAL_FEEDBACK': 2,\n            'TEST_STATE_SUSPENDED': 3,\n            'TEST_STATE_CLOSED': 4,\n            'TEST_NAVIGATION_LINEAR': 0,\n            'TEST_NAVIGATION_NONLINEAR': 1,\n            'TEST_ITEM_STATE_INTERACTING': 1,\n            'SECTION_EXIT_CODE': {\n                'COMPLETED_NORMALLY': 700,\n                'QUIT': 701,\n                'COMPLETE_TIMEOUT': 703,\n                'TIMEOUT': 704,\n                'FORCE_QUIT': 705,\n                'IN_PROGRESS': 706,\n                'ERROR': 300\n            },\n            'TEST_EXIT_CODE': {\n                'COMPLETE': 'C',\n                'TERMINATED': 'T',\n                'INCOMPLETE': 'IC',\n                'INCOMPLETE_QUIT': 'IQ',\n                'INACTIVE': 'IA',\n                'CANDIDATE_DISAGREED_WITH_NDA': 'DA'\n            },\n            beforeTransition: function (callback) {\n                // Ask the top window to start the loader.\n                iframeNotifier.parent('loading');\n\n                // Disable buttons.\n                this.disableGui();\n\n                $controls.$itemFrame.hide();\n                $controls.$rubricBlocks.hide();\n                $controls.$timerWrapper.hide();\n\n                // Wait at least waitingTime ms for a better user experience.\n                if (typeof callback === 'function') {\n                    setTimeout(callback, waitingTime);\n                }\n            },\n\n            afterTransition: function () {\n                this.enableGui();\n\n                //ask the top window to stop the loader\n                iframeNotifier.parent('unloading');\n            },\n\n            /**\n             * Jumps to a particular item in the test\n             * @param {Number} position The position of the item within the test\n             */\n            jump: function(position) {\n                var self = this;\n                this.disableGui();\n                this.itemServiceApi.kill(function() {\n                    self.actionCall('jump', null, {position: position});\n                });\n            },\n\n            /**\n             * Marks an item for later review\n             * @param {Boolean} flag The state of the flag\n             * @param {Number} position The position of the item within the test\n             */\n            markForReview: function(flag, position) {\n                var self = this;\n\n                // Ask the top window to start the loader.\n                iframeNotifier.parent('loading');\n\n                // Disable buttons.\n                this.disableGui();\n\n                this.itemServiceApi.kill(function () {\n                    $.ajax({\n                        url: self.testContext.markForReviewUrl,\n                        cache: false,\n                        async: true,\n                        type: 'POST',\n                        dataType: 'json',\n                        data: {\n                            flag: flag,\n                            position: position\n                        },\n                        success: function(testContext) {\n                            self.setTestContext(testContext);\n                            self.updateTestReview();\n                            self.itemServiceApi.connect($controls.$itemFrame[0]);\n\n                            // Enable buttons.\n                            self.enableGui();\n\n                            //ask the top window to stop the loader\n                            iframeNotifier.parent('unloading');\n\n                        }\n                    });\n                });\n            },\n\n            moveForward: function () {\n                var self = this;\n                this.disableGui();\n\n                this.itemServiceApi.kill(function () {\n                    self.actionCall('moveForward');\n                });\n            },\n\n            moveBackward: function () {\n                var self = this;\n\n                this.disableGui();\n                this.itemServiceApi.kill(function () {\n                    self.actionCall('moveBackward');\n                });\n            },\n\n            skip: function () {\n                this.disableGui();\n                \n                this.actionCall('skip');\n            },\n\n            timeout: function () {\n                var self = this;\n                this.disableGui();\n                this.testContext.isTimeout = true;\n                this.updateTimer();\n\n                this.itemServiceApi.kill(function () {\n                    var confirmBox = $('.timeout-modal-feedback'),\n                        testContext = self.testContext,\n                        confirmBtn = confirmBox.find('.js-timeout-confirm, .modal-close'),\n                        metaData = {};\n                        \n                    if (testContext.numberCompletedSection === testContext.numberItemsSection) {\n                        metaData = {\"SECTION\" : {\"SECTION_EXIT_CODE\" : TestRunner.SECTION_EXIT_CODE.COMPLETE_TIMEOUT}};\n                    } else {\n                        metaData = {\"SECTION\" : {\"SECTION_EXIT_CODE\" : TestRunner.SECTION_EXIT_CODE.TIMEOUT}};\n                    }\n                    \n                    confirmBox.modal({width: 500});\n                    confirmBtn.off('click').on('click', function () {\n                        confirmBox.modal('close');\n                        self.actionCall('timeout', metaData);\n                    });\n                });\n            },\n            comment: function () {\n                if(!$controls.$commentArea.is(':visible')) {\n                    $controls.$commentText.val('');\n                }\n                $controls.$commentArea.toggle();\n                $controls.$commentText.focus();\n            },\n\n            closeComment: function () {\n                $controls.$commentArea.hide();\n            },\n\n            emptyComment: function () {\n                $controls.$commentText.val('');\n            },\n\n            storeComment: function () {\n                var self = this;\n                var comment = $controls.$commentText.val();\n                if(!comment) {\n                    return;\n                }\n                $.when(\n                    $.post(\n                        self.testContext.commentUrl,\n                        { comment: comment }\n                    )\n                ).done(function() {\n                    self.closeComment();\n                });\n            },\n\n            /**\n             * Sets the assessment test context object\n             * @param {Object} testContext\n             */\n            setTestContext: function(testContext) {\n                this.testContext = testContext;\n                this.itemServiceApi = eval(testContext.itemServiceApiCall);\n            },\n\n            update: function (testContext) {\n                var self = this;\n                $controls.$itemFrame.remove();\n\n                var $runner = $('#runner');\n                $runner.css('height', 'auto');\n\n                this.setTestContext(testContext);\n                this.updateContext();\n                this.updateProgress();\n                this.updateNavigation();\n                this.updateTestReview();\n                this.updateInformation();\n                this.updateRubrics();\n                this.updateTools(testContext);\n                this.updateTimer();\n                this.updateExitButton();\n                \n                $controls.$itemFrame = $('<iframe id=\"qti-item\" frameborder=\"0\"/>');\n                $controls.$itemFrame.appendTo($controls.$contentBox);\n                iframeResizer.autoHeight($controls.$itemFrame, 'body');\n\n                if (this.testContext.itemSessionState === this.TEST_ITEM_STATE_INTERACTING && self.testContext.isTimeout === false) {\n                    $doc.off('.testRunner').on('serviceloaded.testRunner', function () {\n                        self.afterTransition();\n                        self.adjustFrame();\n                        $controls.$itemFrame.css({visibility: 'visible'});\n                    });\n\n                    // Inject API into the frame.\n                    this.itemServiceApi.loadInto($controls.$itemFrame[0], function () {\n                        // We now rely on the 'serviceloaded' event.\n                    });\n                }\n                else {\n                    // e.g. no more attempts or timeout! Simply consider the transition is finished,\n                    // but do not load the item.\n                    self.afterTransition();\n                }\n            },\n\n            updateInformation: function () {\n\n                if (this.testContext.isTimeout === true) {\n                    feedback().error(__('Time limit reached for item \"%s\".', this.testContext.itemIdentifier));\n                }\n                else if (this.testContext.itemSessionState !== this.TEST_ITEM_STATE_INTERACTING) {\n                    feedback().error(__('No more attempts allowed for item \"%s\".', this.testContext.itemIdentifier));\n                }\n            },\n\n            updateTools: function updateTools(testContext) {\n\n\t\t\t\tvar $toolsContainer,\n                    config = module.config();\n\n                if (this.testContext.allowSkipping === true) {\n                    if (this.testContext.isLast === false) {\n                        $controls.$skip.show();\n                        $controls.$skipEnd.hide();\n                    }\n                    else {\n                        $controls.$skip.hide();\n                        $controls.$skipEnd.show();\n                    }\n                }\n                else {\n                    $controls.$skip.hide();\n                    $controls.$skipEnd.hide();\n                }\n\n                if(config && config.qtiTools){\n                    $toolsContainer = $('.tools-box-list');\n                    _.forIn(config.qtiTools, function(toolconfig, id){\n                        actionBarHook.initQtiTool($toolsContainer, id, toolconfig, testContext, TestRunner);\n                    });\n                }\n            },\n\n            createTimer: function(cst) {\n                var $timer = $('<div>', {'class': 'qti-timer qti-timer__type-' + cst.qtiClassName }),\n                    $label = $('<div>', {'class': 'qti-timer_label truncate', text: cst.label }),\n                    $time  = $('<div>', {'class': 'qti-timer_time', text: this.formatTime(cst.seconds) });\n\n                $timer.append($label);\n                $timer.append($time);\n                return $timer;\n            },\n\n            updateTimer: function () {\n                var self = this;\n                var hasTimers;\n                $controls.$timerWrapper.empty();\n\n                for (var i = 0; i < timerIds.length; i++) {\n                    clearTimeout(timerIds[i]);\n                }\n\n                timerIds = [];\n                currentTimes = [];\n                lastDates = [];\n                timeDiffs = [];\n\n                if (self.testContext.isTimeout === false &&\n                    self.testContext.itemSessionState === self.TEST_ITEM_STATE_INTERACTING) {\n\n                    hasTimers = !!this.testContext.timeConstraints.length;\n                    $controls.$topActionBar.toggleClass('has-timers', hasTimers);\n                    self.adjustFrame();\n\n                    if (hasTimers) {\n\n                        // Insert QTI Timers container.\n                        // self.formatTime(cst.seconds)\n                        for (i = 0; i < this.testContext.timeConstraints.length; i++) {\n\n                            var cst = this.testContext.timeConstraints[i];\n\n                            if (cst.allowLateSubmission === false) {\n\n                                // Set up a timer for this constraint\n                                $controls.$timerWrapper.append(self.createTimer(cst));\n\n                                // Set up a timer and update it with setInterval.\n                                currentTimes[i] = cst.seconds;\n                                lastDates[i] = new Date();\n                                timeDiffs[i] = 0;\n                                timerIndex = i;\n\n                                cst.warningTime = Number.NEGATIVE_INFINITY;\n\n                                if (self.testContext.timerWarning && self.testContext.timerWarning[cst.qtiClassName]) {\n                                    cst.warningTime = parseInt(self.testContext.timerWarning[cst.qtiClassName], 10);\n                                }\n                                (function (timerIndex, cst) {\n                                    timerIds[timerIndex] = setInterval(function () {\n\n                                        timeDiffs[timerIndex] += (new Date()).getTime() - lastDates[timerIndex].getTime();\n\n                                        if (timeDiffs[timerIndex] >= 1000) {\n                                            var seconds = timeDiffs[timerIndex] / 1000;\n                                            currentTimes[timerIndex] -= seconds;\n                                            timeDiffs[timerIndex] = 0;\n                                        }\n\n                                        $timers.eq(timerIndex)\n                                            .html(self.formatTime(Math.round(currentTimes[timerIndex])));\n\n                                        if (currentTimes[timerIndex] <= 0) {\n                                            // The timer expired...\n                                            currentTimes[timerIndex] = 0;\n                                            clearInterval(timerIds[timerIndex]);\n\n                                            // Hide item to prevent any further interaction with the candidate.\n                                            $controls.$itemFrame.hide();\n                                            self.timeout();\n                                        } else {\n                                            lastDates[timerIndex] = new Date();\n                                        }\n\n                                        if (_.isFinite(cst.warningTime) && currentTimes[timerIndex] <= cst.warningTime) {\n                                            self.timeWarning(cst);\n                                        }\n\n                                    }, 1000);\n                                }(timerIndex, cst));\n                            }\n                        }\n\n                        $timers = $controls.$timerWrapper.find('.qti-timer .qti-timer_time');\n                        $controls.$timerWrapper.show();\n                    }\n                }\n            },\n\n            /**\n             * Mark appropriate timer by warning colors and show feedback message\n             *\n             * @param {object} cst - Time constraint\n             * @param {integer} cst.warningTime - Warning time in seconds.\n             * @param {integer} cst.qtiClassName - Class name of qti instance for which the timer is set (assessmentItemRef | assessmentSection | testPart).\n             * @param {integer} cst.seconds - Initial timer value.\n             * @returns {undefined}\n             */\n            timeWarning: function (cst) {\n                var message = '';\n                $controls.$timerWrapper.find('.qti-timer__type-' + cst.qtiClassName).addClass('qti-timer__warning');\n\n                // Initial time more than warning time in config\n                if (cst.seconds > cst.warningTime) {\n                    message = moment.duration(cst.warningTime, \"seconds\").humanize();\n                    feedback().warning(__(\"Warning – You have %s remaining to complete the test.\", message));\n                }\n\n                cst.warningTime = Number.NEGATIVE_INFINITY;\n            },\n            updateRubrics: function () {\n                $controls.$rubricBlocks.remove();\n\n                if (this.testContext.rubrics.length > 0) {\n\n                    $controls.$rubricBlocks = $('<div id=\"qti-rubrics\"/>');\n\n                    for (var i = 0; i < this.testContext.rubrics.length; i++) {\n                        $controls.$rubricBlocks.append(this.testContext.rubrics[i]);\n                    }\n\n                    // modify the <a> tags in order to be sure it\n                    // opens in another window.\n                    $controls.$rubricBlocks.find('a').bind('click keypress', function () {\n                        window.open(this.href);\n                        return false;\n                    });\n\n                    $controls.$rubricBlocks.prependTo($controls.$contentBox);\n\n                    if (MathJax) {\n                        MathJax.Hub.Queue([\"Typeset\", MathJax.Hub], $controls.$rubricBlocks[0]);\n                    }\n\n                }\n            },\n\n            updateNavigation: function () {\n                $controls.$exit.show();\n\n                if(this.testContext.isLast === true) {\n                    $controls.$moveForward.hide();\n                    $controls.$moveEnd.show();\n                }\n                else {\n                    $controls.$moveForward.show();\n                    $controls.$moveEnd.hide();\n                }\n                if (this.testContext.navigationMode === this.TEST_NAVIGATION_LINEAR) {\n                    // LINEAR\n                    $controls.$moveBackward.hide();\n                }\n                else {\n                    // NONLINEAR\n                    $controls.$controls.show();\n                    if(this.testContext.canMoveBackward === true) {\n                        $controls.$moveBackward.show();\n                    }\n                    else {\n                        $controls.$moveBackward.hide();\n                    }\n                }\n            },\n\n            /**\n             * Updates the test taker review screen\n             */\n            updateTestReview: function() {\n                var considerProgress = this.testContext.considerProgress === true;\n\n                if (this.testReview) {\n                    this.testReview.toggle(considerProgress);\n                    this.testReview.update(this.testContext);\n                }\n            },\n\n            /**\n             * Updates the progress bar\n             */\n            updateProgress: function () {\n                var considerProgress = this.testContext.considerProgress === true;\n\n                $controls.$progressBox.css('visibility', considerProgress ? 'visible' : 'hidden');\n\n                if (considerProgress) {\n                    this.progressUpdater.update(this.testContext);\n                }\n            },\n\n            updateContext: function () {\n\n                $controls.$title.text(this.testContext.testTitle);\n                $controls.$position.text(' - ' + this.testContext.sectionTitle);\n                $controls.$titleGroup.show();\n            },\n            \n            updateExitButton : function(){\n                \n                $controls.$logout.toggleClass('hidden', !this.testContext.logoutButton);\n                $controls.$exit.toggleClass('hidden', !this.testContext.exitButton);\n            },\n            \n            adjustFrame: function () {\n                var finalHeight = $(window).innerHeight() - $controls.$topActionBar.outerHeight() - $controls.$bottomActionBar.outerHeight();\n                $controls.$contentBox.height(finalHeight);\n                if($controls.$sideBars.length){\n                    $controls.$sideBars.each(function() {\n                        var $sideBar = $(this);\n                        $sideBar.height(finalHeight - $sideBar.outerHeight() + $sideBar.height());\n                    });\n                }\n            },\n\n            disableGui: function () {\n                $controls.$naviButtons.addClass('disabled');\n                if (this.testReview) {\n                    this.testReview.disable();\n                }\n            },\n\n            enableGui: function () {\n                $controls.$naviButtons.removeClass('disabled');\n                if (this.testReview) {\n                    this.testReview.enable();\n                }\n            },\n\n            formatTime: function (totalSeconds) {\n                var sec_num = totalSeconds;\n                var hours = Math.floor(sec_num / 3600);\n                var minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n                var seconds = sec_num - (hours * 3600) - (minutes * 60);\n\n                if (hours < 10) {\n                    hours = \"0\" + hours;\n                }\n                if (minutes < 10) {\n                    minutes = \"0\" + minutes;\n                }\n                if (seconds < 10) {\n                    seconds = \"0\" + seconds;\n                }\n\n                var time = hours + ':' + minutes + ':' + seconds;\n\n                return time;\n            },\n\n            /**\n             * Call action specified in testContext. A postfix <i>Url</i> will be added to the action name.\n             * To specify actions see {@link https://github.com/oat-sa/extension-tao-testqti/blob/master/helpers/class.TestRunnerUtils.php}\n             * @param {String} action - Action name\n             * @param {Object} [metaData] - Metadata to be sent to the server. Will be saved in result storage as a trace variable.\n             * Example:\n             * <pre>\n             * {\n             *   \"TEST\" : {\n             *      \"TEST_EXIT_CODE\" : \"T\"\n             *   },\n             *   \"SECTION\" : {\n             *      \"SECTION_EXIT_CODE\" : 704\n             *   }\n             * }\n             * </pre>\n             * @param {Object} [extraParams] - Additional parameters to be sent to the server\n             * @returns {undefined}\n             */\n            actionCall: function (action, metaData, extraParams) {\n                var self = this,\n                    params = metaData ? {\"metaData\" : metaData} : {};\n                if (extraParams) {\n                    params = _.assign(params, extraParams);\n                }\n                this.beforeTransition(function () {\n                    $.ajax({\n                        url: self.testContext[action + 'Url'],\n                        cache: false,\n                        data: params,\n                        async: true,\n                        dataType: 'json',\n                        success: function (testContext) {\n                            if (testContext.state === self.TEST_STATE_CLOSED) {\n                                self.serviceApi.finish();\n                            }\n                            else {\n                                self.update(testContext);\n                            }\n                        }\n                    });\n                });\n            },\n\n            /**\n             * Exit from test (after confirmation). All answered questions will be submitted.\n             *\n             * @returns {undefined}\n             */\n            exit: function () {\n                var self = this,\n                    $confirmBox = $('.exit-modal-feedback'),\n                    testProgression = TestRunner.testReview ? \n                        TestRunner.testReview.getProgression(self.testContext) : {\n                            total : self.testContext.numberItems,\n                            answered : self.testContext.numberCompleted,\n                            flagged : self.testContext.numberFlagged || 0\n                        },\n                    message = __(\n                        \"You have %s unanswered question(s) and have %s item(s) marked for review. Are you sure you want to end the test?\",\n                        (testProgression.total - testProgression.answered).toString(),\n                        (testProgression.flagged).toString()\n                    ),\n                    metaData = {\n                        \"TEST\" : {\"TEST_EXIT_CODE\" : TestRunner.TEST_EXIT_CODE.INCOMPLETE},\n                        \"SECTION\" : {\"SECTION_EXIT_CODE\" : TestRunner.SECTION_EXIT_CODE.QUIT}\n                    };\n\n                $confirmBox.find('.message').html(message);\n                $confirmBox.modal({ width: 500 });\n\n                $confirmBox.find('.js-exit-cancel, .modal-close').off('click').on('click', function () {\n                    $confirmBox.modal('close');\n                });\n\n                $confirmBox.find('.js-exit-confirm').off('click').on('click', function () {\n                    $confirmBox.modal('close');\n                    self.itemServiceApi.kill(function () {\n                        self.actionCall('endTestSession', metaData);\n                    });\n                });\n            }\n        };\n\n        return {\n            start: function (testContext) {\n\n                $controls = {\n                    // navigation\n                    $moveForward: $('[data-control=\"move-forward\"]'),\n                    $moveEnd: $('[data-control=\"move-end\"]'),\n                    $moveBackward: $('[data-control=\"move-backward\"]'),\n                    $skip: $('[data-control=\"skip\"]'),\n                    $skipEnd: $('[data-control=\"skip-end\"]'),\n                    $exit: $(window.parent.document).find('[data-control=\"exit\"]'),\n                    $logout: $(window.parent.document).find('[data-control=\"logout\"]'),\n                    $naviButtons: $('.bottom-action-bar .action'),\n                    $skipButtons: $('.navi-box .skip'),\n                    $forwardButtons: $('.navi-box .forward'),\n\n                    // comment\n                    $commentToggle: $('[data-control=\"comment-toggle\"]'),\n                    $commentArea: $('[data-control=\"qti-comment\"]'),\n                    $commentText: $('[data-control=\"qti-comment-text\"]'),\n                    $commentCancel: $('[data-control=\"qti-comment-cancel\"]'),\n                    $commentSend: $('[data-control=\"qti-comment-send\"]'),\n\n                    // progress bar\n                    $progressBar: $('[data-control=\"progress-bar\"]'),\n                    $progressLabel: $('[data-control=\"progress-label\"]'),\n                    $progressBox: $('.progress-box'),\n\n                    // title\n                    $title:  $('[data-control=\"qti-test-title\"]'),\n                    $position:  $('[data-control=\"qti-test-position\"]'),\n\n                    // timers\n                    $timerWrapper:  $('[data-control=\"qti-timers\"]'),\n\n                    // other zones\n                    $contentPanel: $('.content-panel'),\n                    $controls: $('.qti-controls'),\n                    $itemFrame: $('#qti-item'),\n                    $rubricBlocks: $('#qti-rubrics'),\n                    $contentBox: $('#qti-content'),\n                    $sideBars: $('.test-sidebar'),\n                    $topActionBar: $('.horizontal-action-bar.top-action-bar'),\n                    $bottomActionBar: $('.horizontal-action-bar.bottom-action-bar')\n                };\n                \n                // title\n                $controls.$titleGroup = $controls.$title.add($controls.$position);\n\n                // @todo remove when framework gets isn place\n                if(testContext.allowComment) {\n                    $controls.$commentToggle.show();\n                }\n\n                $doc.ajaxError(function (event, jqxhr) {\n                    if (jqxhr.status === 403) {\n                        iframeNotifier.parent('serviceforbidden');\n                    }\n                });\n\n                window.onServiceApiReady = function onServiceApiReady(serviceApi) {\n                    TestRunner.serviceApi = serviceApi;\n\n                    // If the assessment test session is in CLOSED state,\n                    // we give the control to the delivery engine by calling finish.\n                    if (testContext.state === TestRunner.TEST_STATE_CLOSED) {\n                        serviceApi.finish();\n                    }\n                    else {\n                        TestRunner.update(testContext);\n                    }\n                };\n\n\n                TestRunner.beforeTransition();\n                TestRunner.testContext = testContext;\n\n                $controls.$skipButtons.click(function () {\n                    if (!$(this).hasClass('disabled')) {\n                        TestRunner.skip();\n                    }\n                });\n\n                $controls.$forwardButtons.click(function () {\n                    if (!$(this).hasClass('disabled')) {\n                        TestRunner.moveForward();\n                    }\n                });\n\n                $controls.$moveBackward.click(function () {\n                    if (!$(this).hasClass('disabled')) {\n                        TestRunner.moveBackward();\n                    }\n                });\n\n                $controls.$commentToggle.click(function () {\n                    if (!$(this).hasClass('disabled')) {\n                        TestRunner.comment();\n                    }\n                });\n\n                $controls.$commentCancel.click(function () {\n                    TestRunner.closeComment();\n                });\n\n                $controls.$commentSend.click(function () {\n                    TestRunner.storeComment();\n                });\n\n                $controls.$exit.click(function (e) {\n                    e.preventDefault();\n                    TestRunner.exit();\n                });\n\n                $(window).bind('resize', function () {\n                    TestRunner.adjustFrame();\n                    $controls.$titleGroup.show();\n                });\n\n                $doc.bind('loading', function () {\n                    iframeNotifier.parent('loading');\n                });\n\n\n                $doc.bind('unloading', function () {\n                    iframeNotifier.parent('unloading');\n                });\n\n                TestRunner.progressUpdater = progressUpdater($controls.$progressBar, $controls.$progressLabel);\n\n                if (testContext.reviewScreen) {\n                    TestRunner.testReview = testReview($controls.$contentPanel, {\n                        region: testContext.reviewRegion || 'left',\n                        reviewScope: !!testContext.reviewScope,\n                        preventsUnseen: !!testContext.reviewPreventsUnseen,\n                        canCollapse: !!testContext.reviewCanCollapse\n                    }).on('jump', function(event, position) {\n                        TestRunner.jump(position);\n                    }).on('mark', function(event, flag, position) {\n                        TestRunner.markForReview(flag, position);\n                    });\n                    $controls.$sideBars = $('.test-sidebar');\n                }\n\n                TestRunner.updateProgress();\n                TestRunner.updateTestReview();\n\n                iframeNotifier.parent('serviceready');\n\n\n                TestRunner.adjustFrame();\n\n                $controls.$topActionBar.add($controls.$bottomActionBar).animate({ opacity: 1 }, 600);\n\n                deleter($('#feedback-box'));\n                modal($('body'));\n            }\n        };\n    });\n\n"]}